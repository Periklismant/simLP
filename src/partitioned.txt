Log file: log.txt

Keys in both event descriptions: 
[('movingSpeed', 'terminatedAt'), ('lowSpeed', 'terminatedAt'), ('trawlingMovement', 'initiatedAt'), ('changingSpeed', 'initiatedAt'), ('trawlingMovement', 'terminatedAt'), ('changingSpeed', 'terminatedAt'), ('loitering', 'holdsFor'), ('highSpeedNearCoast', 'initiatedAt'), ('highSpeedNearCoast', 'terminatedAt'), ('rendezVous', 'holdsFor'), ('withinArea', 'initiatedAt'), ('gap', 'initiatedAt'), ('gap', 'terminatedAt'), ('withinArea', 'terminatedAt'), ('stopped', 'initiatedAt'), ('stopped', 'terminatedAt'), ('underWay', 'holdsFor'), ('trawling', 'holdsFor'), ('lowSpeed', 'initiatedAt'), ('drifting', 'initiatedAt'), ('tugging', 'holdsFor'), ('anchoredOrMoored', 'holdsFor'), ('movingSpeed', 'initiatedAt'), ('drifting', 'terminatedAt')]


Key: 
('movingSpeed', 'terminatedAt')
Event Description 1: 
terminatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MinServiceSpeed).

terminatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,MinServiceSpeed).

terminatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MaxServiceSpeed).

terminatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,MaxServiceSpeed).


Event Description 2: 
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

_dummy_rule :- 
	.

_dummy_rule :- 
	.



Optimal Matching: 
[1 0 2 3]

Rule Distances: 
[0.44791667 0.5234375  1.         1.        ]

Similarity: 
0.25716145833333337


Key: 
('lowSpeed', 'terminatedAt')
Event Description 1: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,Vmin).

_dummy_rule :- 
	.


Event Description 2: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).



Optimal Matching: 
[0 1]

Rule Distances: 
[0.42708333 1.        ]

Similarity: 
0.28645833333333337


Key: 
('trawlingMovement', 'initiatedAt')
Event Description 1: 
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CoG,_TrueHeading),T),
	holdsAt(=(trawlingSpeed(Vessel),true),T),
	checkHeadingVariability(Vessel,T).


Event Description 2: 
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).



Optimal Matching: 
[0]

Rule Distances: 
[0.5234375]

Similarity: 
0.4765625


Key: 
('changingSpeed', 'initiatedAt')
Event Description 1: 
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,CurrentSpeed,_,_),T),
	holdsAt(=(velocity(Vessel,PreviousSpeed,_,_),previous(T)),Tprev),
	/(abs(-(CurrentSpeed,PreviousSpeed)),>(PreviousSpeed,/(a,100))).


Event Description 2: 
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).



Optimal Matching: 
[0]

Rule Distances: 
[0.6953125]

Similarity: 
0.3046875


Key: 
('trawlingMovement', 'terminatedAt')
Event Description 1: 
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CoG,_TrueHeading),T),
	-(holdsAt(=(trawlingSpeed(Vessel),true),T)).

terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	-(checkHeadingVariability(Vessel,T)).


Event Description 2: 
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

_dummy_rule :- 
	.



Optimal Matching: 
[0 1]

Rule Distances: 
[0.59375 1.     ]

Similarity: 
0.203125


Key: 
('changingSpeed', 'terminatedAt')
Event Description 1: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,CurrentSpeed,_,_),T),
	holdsAt(=(velocity(Vessel,PreviousSpeed,_,_),previous(T)),Tprev),
	/(abs(-(CurrentSpeed,PreviousSpeed)),=<(PreviousSpeed,/(a,100))).

_dummy_rule :- 
	.


Event Description 2: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).



Optimal Matching: 
[0 1]

Rule Distances: 
[0.6953125 1.       ]

Similarity: 
0.15234375


Key: 
('loitering', 'holdsFor')
Event Description 1: 
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(withinArea(Vessel,Area),true),Ia),
	holdsFor(=(velocity(Vessel,Speed,_,_),stopped),Iv),
	intersect_all(list(Ia,Iv),I),
	threshold(vloiter,Vloiter),
	intDurGreater(I,Vloiter,I).


Event Description 2: 
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(lowSpeed(Vessel),true),Il),
	holdsFor(=(stopped(Vessel),farFromPorts),Is),
	union_all(list(Il,Is),Ils),
	holdsFor(=(withinArea(Vessel,nearCoast),true),Inc),
	holdsFor(=(anchoredOrMoored(Vessel),true),Iam),
	relative_complement_all(Ils,list(Inc,Iam),Ii),
	thresholds(loiteringTime,LoiteringTime),
	intDurGreater(Ii,LoiteringTime,I).



Optimal Matching: 
[0]

Rule Distances: 
[0.71527778]

Similarity: 
0.2847222222222222


Key: 
('highSpeedNearCoast', 'initiatedAt')
Event Description 1: 
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	holdsAt(=(withinArea(Vessel,nearCoast),true),T),
	velocity(Vessel,Speed,_,T),
	>(Speed,5).


Event Description 2: 
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	-(inRange(Speed,0,HcNearCoastMax)),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T).



Optimal Matching: 
[0]

Rule Distances: 
[0.709375]

Similarity: 
0.2906249999999999


Key: 
('highSpeedNearCoast', 'terminatedAt')
Event Description 1: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(leavesArea(Vessel,nearCoast),T).

terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	velocity(Vessel,Speed,_,T),
	=<(Speed,5).


Event Description 2: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	inRange(Speed,0,HcNearCoastMax).

terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).



Optimal Matching: 
[1 0]

Rule Distances: 
[0.140625  0.8203125]

Similarity: 
0.51953125


Key: 
('rendezVous', 'holdsFor')
Event Description 1: 
holdsFor(=(rendezVous(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	holdsFor(=(stopped(Vessel1),true),Is1),
	holdsFor(=(stopped(Vessel2),true),Is2),
	union_all(list(Is1,Is2),Is),
	intersect_all(list(Ip,Is),I).


Event Description 2: 
holdsFor(=(rendezVous(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	-(oneIsTug(Vessel1,Vessel2)),
	-(oneIsPilot(Vessel1,Vessel2)),
	holdsFor(=(lowSpeed(Vessel1),true),Il1),
	holdsFor(=(lowSpeed(Vessel2),true),Il2),
	holdsFor(=(stopped(Vessel1),farFromPorts),Is1),
	holdsFor(=(stopped(Vessel2),farFromPorts),Is2),
	union_all(list(Il1,Is1),I1b),
	union_all(list(Il2,Is2),I2b),
	intersect_all(list(I1b,I2b,Ip),If),
	\=(If,list),
	holdsFor(=(withinArea(Vessel1,nearPorts),true),Iw1),
	holdsFor(=(withinArea(Vessel2,nearPorts),true),Iw2),
	holdsFor(=(withinArea(Vessel1,nearCoast),true),Iw3),
	holdsFor(=(withinArea(Vessel2,nearCoast),true),Iw4),
	relative_complement_all(If,list(Iw1,Iw2,Iw3,Iw4),Ii),
	thresholds(rendezvousTime,RendezvousTime),
	intDurGreater(Ii,RendezvousTime,I).



Optimal Matching: 
[0]

Rule Distances: 
[0.74835526]

Similarity: 
0.2516447368421053


Key: 
('withinArea', 'initiatedAt')
Event Description 1: 
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,AreaID),T),
	areaType(AreaID,AreaType).


Event Description 2: 
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).



Optimal Matching: 
[0]

Rule Distances: 
[0.]

Similarity: 
1.0


Key: 
('gap', 'initiatedAt')
Event Description 1: 
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).


Event Description 2: 
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).



Optimal Matching: 
[0 1]

Rule Distances: 
[0. 0.]

Similarity: 
1.0


Key: 
('gap', 'terminatedAt')
Event Description 1: 
terminatedAt(=(gap(Vessel),_Value),T) :- 
	happensAt(gap_end(Vessel),T).


Event Description 2: 
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).



Optimal Matching: 
[0]

Rule Distances: 
[0.]

Similarity: 
1.0


Key: 
('withinArea', 'terminatedAt')
Event Description 1: 
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,AreaID),T),
	areaType(AreaID,AreaType).

terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).


Event Description 2: 
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).



Optimal Matching: 
[0 1]

Rule Distances: 
[0. 0.]

Similarity: 
1.0


Key: 
('stopped', 'initiatedAt')
Event Description 1: 
initiatedAt(=(stopped(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,LowThreshold).

_dummy_rule :- 
	.


Event Description 2: 
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).



Optimal Matching: 
[0 1]

Rule Distances: 
[0.61458333 1.        ]

Similarity: 
0.19270833333333337


Key: 
('stopped', 'terminatedAt')
Event Description 1: 
terminatedAt(=(stopped(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,LowThreshold).

_dummy_rule :- 
	.


Event Description 2: 
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).



Optimal Matching: 
[0 1]

Rule Distances: 
[0.44791667 1.        ]

Similarity: 
0.27604166666666674


Key: 
('underWay', 'holdsFor')
Event Description 1: 
holdsFor(=(underWay(Vessel),true),I) :- 
	holdsFor(=(movingSpeed(Vessel),below),Ib),
	holdsFor(=(movingSpeed(Vessel),normal),In),
	holdsFor(=(movingSpeed(Vessel),above),Ia),
	union_all(list(Ib,In,Ia),I).


Event Description 2: 
holdsFor(=(underWay(Vessel),true),I) :- 
	holdsFor(=(movingSpeed(Vessel),below),I1),
	holdsFor(=(movingSpeed(Vessel),normal),I2),
	holdsFor(=(movingSpeed(Vessel),above),I3),
	union_all(list(I1,I2,I3),I).



Optimal Matching: 
[0]

Rule Distances: 
[0.]

Similarity: 
1.0


Key: 
('trawling', 'holdsFor')
Event Description 1: 
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(velocity(Vessel,Speed),trawlingSpeed),I1),
	holdsFor(=(withinArea(Vessel,fishingArea),true),I2),
	intersect_all(list(I1,I2),I).


Event Description 2: 
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(trawlSpeed(Vessel),true),It),
	holdsFor(=(trawlingMovement(Vessel),true),Itc),
	intersect_all(list(It,Itc),Ii),
	thresholds(trawlingTime,TrawlingTime),
	intDurGreater(Ii,TrawlingTime,I).



Optimal Matching: 
[0]

Rule Distances: 
[0.453125]

Similarity: 
0.546875


Key: 
('lowSpeed', 'initiatedAt')
Event Description 1: 
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	countRecentMessagesUnderThreshold(Vessel,Tmin,NumMessages,Vmin),
	>=(NumMessages,m).


Event Description 2: 
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).



Optimal Matching: 
[0]

Rule Distances: 
[0.76041667]

Similarity: 
0.23958333333333337


Key: 
('drifting', 'initiatedAt')
Event Description 1: 
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,CoG,_TrueHeading),T),
	holdsAt(=(driftingConditions(CoG,Speed),true),T).


Event Description 2: 
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	=\=(TrueHeading,511.0),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	>(AngleDiff,AdriftAngThr),
	holdsAt(=(underWay(Vessel),true),T).



Optimal Matching: 
[0]

Rule Distances: 
[0.60267857]

Similarity: 
0.3973214285714286


Key: 
('tugging', 'holdsFor')
Event Description 1: 
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	holdsFor(=(lowSpeed(Vessel1),true),Is1),
	holdsFor(=(lowSpeed(Vessel2),true),Is2),
	intersect_all(list(Ip,Is1,Is2),I).


Event Description 2: 
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsTug(Vessel1,Vessel2),
	-(oneIsPilot(Vessel1,Vessel2)),
	-(twoAreTugs(Vessel1,Vessel2)),
	holdsFor(=(tuggingSpeed(Vessel1),true),Its1),
	holdsFor(=(tuggingSpeed(Vessel2),true),Its2),
	intersect_all(list(Ip,Its1,Its2),Ii),
	thresholds(tuggingTime,TuggingTime),
	intDurGreater(Ii,TuggingTime,I).



Optimal Matching: 
[0]

Rule Distances: 
[0.56875]

Similarity: 
0.43125


Key: 
('anchoredOrMoored', 'holdsFor')
Event Description 1: 
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Isffp),
	holdsFor(=(withinArea(Vessel,anchorage),true),Iwa),
	intersect_all(list(Isffp,Iwa),Isa),
	holdsFor(=(stopped(Vessel),nearPorts),Isn),
	union_all(list(Isa,Isn),Ii),
	threshold(vaorm,Vaorm),
	intDurGreater(Ii,Vaorm,I).


Event Description 2: 
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Istfp),
	holdsFor(=(withinArea(Vessel,anchorage),true),Ia),
	intersect_all(list(Istfp,Ia),Ista),
	holdsFor(=(stopped(Vessel),nearPorts),Istnp),
	union_all(list(Ista,Istnp),Ii),
	thresholds(aOrMTime,AOrMTime),
	intDurGreater(Ii,AOrMTime,I).



Optimal Matching: 
[0]

Rule Distances: 
[0.14583333]

Similarity: 
0.8541666666666666


Key: 
('movingSpeed', 'initiatedAt')
Event Description 1: 
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,0.5),
	=<(Speed,MinServiceSpeed).

initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MinServiceSpeed),
	=<(Speed,MaxServiceSpeed).

initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MaxServiceSpeed).


Event Description 2: 
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).



Optimal Matching: 
[0 1 2]

Rule Distances: 
[0.68229167 0.61875    0.61875   ]

Similarity: 
0.36006944444444444


Key: 
('drifting', 'terminatedAt')
Event Description 1: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,CoG,_TrueHeading),T),
	-(holdsAt(=(driftingConditions(CoG,Speed),true),T)).

_dummy_rule :- 
	.

_dummy_rule :- 
	.


Event Description 2: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=<(AngleDiff,AdriftAngThr).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,_CourseOverGround,511.0),T).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).



Optimal Matching: 
[1 0 2]

Rule Distances: 
[0.53125 1.      1.     ]

Similarity: 
0.15625

{('movingSpeed', 'terminatedAt'): 0.25716145833333337, ('lowSpeed', 'terminatedAt'): 0.28645833333333337, ('trawlingMovement', 'initiatedAt'): 0.4765625, ('changingSpeed', 'initiatedAt'): 0.3046875, ('trawlingMovement', 'terminatedAt'): 0.203125, ('changingSpeed', 'terminatedAt'): 0.15234375, ('loitering', 'holdsFor'): 0.2847222222222222, ('highSpeedNearCoast', 'initiatedAt'): 0.2906249999999999, ('highSpeedNearCoast', 'terminatedAt'): 0.51953125, ('rendezVous', 'holdsFor'): 0.2516447368421053, ('withinArea', 'initiatedAt'): 1.0, ('gap', 'initiatedAt'): 1.0, ('gap', 'terminatedAt'): 1.0, ('withinArea', 'terminatedAt'): 1.0, ('stopped', 'initiatedAt'): 0.19270833333333337, ('stopped', 'terminatedAt'): 0.27604166666666674, ('underWay', 'holdsFor'): 1.0, ('trawling', 'holdsFor'): 0.546875, ('lowSpeed', 'initiatedAt'): 0.23958333333333337, ('drifting', 'initiatedAt'): 0.3973214285714286, ('tugging', 'holdsFor'): 0.43125, ('anchoredOrMoored', 'holdsFor'): 0.8541666666666666, ('movingSpeed', 'initiatedAt'): 0.36006944444444444, ('drifting', 'terminatedAt'): 0.15625}

Keys only in generated event description: 
[('sarOperation', 'holdsFor'), ('trawlingSpeed', 'initiatedAt'), ('trawlingSpeed', 'terminatedAt'), ('sarOperation', 'initiatedAt'), ('sarOperation', 'terminatedAt'), ('piloting', 'holdsFor')]


Keys only in ground event description: 
[('pilotOps', 'holdsFor'), ('sarMovement', 'terminatedAt'), ('trawlSpeed', 'initiatedAt'), ('sarSpeed', 'initiatedAt'), ('inSAR', 'holdsFor'), ('sarSpeed', 'terminatedAt'), ('tuggingSpeed', 'initiatedAt'), ('tuggingSpeed', 'terminatedAt'), ('sarMovement', 'initiatedAt'), ('trawlSpeed', 'terminatedAt')]

Similarity for key: ('movingSpeed', 'terminatedAt') is 0.25716145833333337
Similarity for key: ('lowSpeed', 'terminatedAt') is 0.28645833333333337
Similarity for key: ('trawlingMovement', 'initiatedAt') is 0.4765625
Similarity for key: ('changingSpeed', 'initiatedAt') is 0.3046875
Similarity for key: ('trawlingMovement', 'terminatedAt') is 0.203125
Similarity for key: ('changingSpeed', 'terminatedAt') is 0.15234375
Similarity for key: ('loitering', 'holdsFor') is 0.2847222222222222
Similarity for key: ('highSpeedNearCoast', 'initiatedAt') is 0.2906249999999999
Similarity for key: ('highSpeedNearCoast', 'terminatedAt') is 0.51953125
Similarity for key: ('rendezVous', 'holdsFor') is 0.2516447368421053
Similarity for key: ('withinArea', 'initiatedAt') is 1.0
Similarity for key: ('gap', 'initiatedAt') is 1.0
Similarity for key: ('gap', 'terminatedAt') is 1.0
Similarity for key: ('withinArea', 'terminatedAt') is 1.0
Similarity for key: ('stopped', 'initiatedAt') is 0.19270833333333337
Similarity for key: ('stopped', 'terminatedAt') is 0.27604166666666674
Similarity for key: ('underWay', 'holdsFor') is 1.0
Similarity for key: ('trawling', 'holdsFor') is 0.546875
Similarity for key: ('lowSpeed', 'initiatedAt') is 0.23958333333333337
Similarity for key: ('drifting', 'initiatedAt') is 0.3973214285714286
Similarity for key: ('tugging', 'holdsFor') is 0.43125
Similarity for key: ('anchoredOrMoored', 'holdsFor') is 0.8541666666666666
Similarity for key: ('movingSpeed', 'initiatedAt') is 0.36006944444444444
Similarity for key: ('drifting', 'terminatedAt') is 0.15625
Similarity for key: ('pilotOps', 'holdsFor') is 0
Similarity for key: ('sarMovement', 'terminatedAt') is 0
Similarity for key: ('trawlSpeed', 'initiatedAt') is 0
Similarity for key: ('sarSpeed', 'initiatedAt') is 0
Similarity for key: ('inSAR', 'holdsFor') is 0
Similarity for key: ('sarSpeed', 'terminatedAt') is 0
Similarity for key: ('tuggingSpeed', 'initiatedAt') is 0
Similarity for key: ('tuggingSpeed', 'terminatedAt') is 0
Similarity for key: ('sarMovement', 'initiatedAt') is 0
Similarity for key: ('trawlSpeed', 'terminatedAt') is 0
Average Event Description Similarity is: 
0.3827042541248956
