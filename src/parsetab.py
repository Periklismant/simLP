
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA COMPLEMENTALL DOT ENTITYDOMAIN EQUAL EVENT FLUENT GROUNDING HAPPENSAT HOLDSAT HOLDSFOR IMPL INDEX INITIATEDAT INTERSECTALL LINECOMMENT LISTEND LISTSTART LOWCASESTR LPAREN MULTILINECOMMENT NL NOT NUMBER RPAREN TERMINATEDAT UNIONALL VAR event_description : domain_rule \n\t\t\t\t\t\t\t  | domain_rule event_description  domain_rule : simple_fluent_rule\n\t\t\t\t\t\t| statically_determined_fluent_rule  simple_fluent_rule : init_or_term_atom IMPL\t\t\t\t\t\t\t\t body  statically_determined_fluent_rule : holdsFor_atom  IMPL\t\t\t\t\t\t\t\t\t\t\t\tbody  holdsFor_atom : HOLDSFOR LPAREN fluent_value_pair COMMA interval_list_var RPAREN  init_or_term_atom : init_or_term LPAREN fluent_value_pair COMMA time_var RPAREN  fluent_value_pair : atom EQUAL atom  time_var : VAR  interval_list_var : VAR  body : literal DOT  body : literal COMMA body  literal : atom  literal : NOT atom  atom : term  atom : atom EQUAL atom  args_list : term  args_list : atom  args_list : atom COMMA args_list  term : LOWCASESTR \n\t\t\t\t | VAR \n\t\t\t\t | NUMBER  init_or_term : INITIATEDAT \n\t\t\t\t\t\t | TERMINATEDAT  predicate_name : LOWCASESTR\n\t\t\t\t\t\t   | HAPPENSAT\n\t\t\t\t\t\t   | INITIATEDAT\n\t\t\t\t\t\t   | TERMINATEDAT\n\t\t\t\t\t\t   | HOLDSFOR \n\t\t\t\t\t\t   | HOLDSAT '
    
_lr_action_items = {'HOLDSFOR':([0,2,3,4,16,24,28,35,],[8,8,-3,-4,-5,-6,-12,-13,]),'INITIATEDAT':([0,2,3,4,16,24,28,35,],[9,9,-3,-4,-5,-6,-12,-13,]),'TERMINATEDAT':([0,2,3,4,16,24,28,35,],[10,10,-3,-4,-5,-6,-12,-13,]),'$end':([1,2,3,4,11,16,24,28,35,],[0,-1,-3,-4,-2,-5,-6,-12,-13,]),'IMPL':([5,6,42,43,],[12,13,-8,-7,]),'LPAREN':([7,8,9,10,],[14,15,-24,-25,]),'NOT':([12,13,29,],[19,19,19,]),'LOWCASESTR':([12,13,14,15,19,29,30,33,],[21,21,21,21,21,21,21,21,]),'VAR':([12,13,14,15,19,29,30,32,33,34,],[22,22,22,22,22,22,22,38,22,41,]),'NUMBER':([12,13,14,15,19,29,30,33,],[23,23,23,23,23,23,23,23,]),'DOT':([17,18,20,21,22,23,31,36,],[28,-14,-16,-21,-22,-23,-15,-17,]),'COMMA':([17,18,20,21,22,23,25,27,31,36,39,],[29,-14,-16,-21,-22,-23,32,34,-15,-17,-9,]),'EQUAL':([18,20,21,22,23,26,31,36,39,],[30,-16,-21,-22,-23,33,30,30,30,]),'RPAREN':([37,38,40,41,],[42,-10,43,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'event_description':([0,2,],[1,11,]),'domain_rule':([0,2,],[2,2,]),'simple_fluent_rule':([0,2,],[3,3,]),'statically_determined_fluent_rule':([0,2,],[4,4,]),'init_or_term_atom':([0,2,],[5,5,]),'holdsFor_atom':([0,2,],[6,6,]),'init_or_term':([0,2,],[7,7,]),'body':([12,13,29,],[16,24,35,]),'literal':([12,13,29,],[17,17,17,]),'atom':([12,13,14,15,19,29,30,33,],[18,18,26,26,31,18,36,39,]),'term':([12,13,14,15,19,29,30,33,],[20,20,20,20,20,20,20,20,]),'fluent_value_pair':([14,15,],[25,27,]),'time_var':([32,],[37,]),'interval_list_var':([34,],[40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> event_description","S'",1,None,None,None),
  ('event_description -> domain_rule','event_description',1,'p_event_description','rtec_parser.py',20),
  ('event_description -> domain_rule event_description','event_description',2,'p_event_description','rtec_parser.py',21),
  ('domain_rule -> simple_fluent_rule','domain_rule',1,'p_domain_rule','rtec_parser.py',27),
  ('domain_rule -> statically_determined_fluent_rule','domain_rule',1,'p_domain_rule','rtec_parser.py',28),
  ('simple_fluent_rule -> init_or_term_atom IMPL body','simple_fluent_rule',3,'p_simple_fluent_rule','rtec_parser.py',34),
  ('statically_determined_fluent_rule -> holdsFor_atom IMPL body','statically_determined_fluent_rule',3,'p_statically_determined_fluent_rule','rtec_parser.py',41),
  ('holdsFor_atom -> HOLDSFOR LPAREN fluent_value_pair COMMA interval_list_var RPAREN','holdsFor_atom',6,'p_holdsFor_atom','rtec_parser.py',46),
  ('init_or_term_atom -> init_or_term LPAREN fluent_value_pair COMMA time_var RPAREN','init_or_term_atom',6,'p_init_or_term_atom','rtec_parser.py',50),
  ('fluent_value_pair -> atom EQUAL atom','fluent_value_pair',3,'p_fluent_value_pair','rtec_parser.py',54),
  ('time_var -> VAR','time_var',1,'p_time_var','rtec_parser.py',58),
  ('interval_list_var -> VAR','interval_list_var',1,'p_interval_list_var','rtec_parser.py',62),
  ('body -> literal DOT','body',2,'p_singleton_body','rtec_parser.py',65),
  ('body -> literal COMMA body','body',3,'p_body','rtec_parser.py',69),
  ('literal -> atom','literal',1,'p_positive_literal','rtec_parser.py',73),
  ('literal -> NOT atom','literal',2,'p_negative_literal','rtec_parser.py',77),
  ('atom -> term','atom',1,'p_atom','rtec_parser.py',88),
  ('atom -> atom EQUAL atom','atom',3,'p_atom_eq','rtec_parser.py',92),
  ('args_list -> term','args_list',1,'p_args_list_singleton_term','rtec_parser.py',97),
  ('args_list -> atom','args_list',1,'p_args_list_singleton_atom','rtec_parser.py',102),
  ('args_list -> atom COMMA args_list','args_list',3,'p_args_list_many','rtec_parser.py',112),
  ('term -> LOWCASESTR','term',1,'p_term','rtec_parser.py',117),
  ('term -> VAR','term',1,'p_term','rtec_parser.py',118),
  ('term -> NUMBER','term',1,'p_term','rtec_parser.py',119),
  ('init_or_term -> INITIATEDAT','init_or_term',1,'p_init_or_term','rtec_parser.py',124),
  ('init_or_term -> TERMINATEDAT','init_or_term',1,'p_init_or_term','rtec_parser.py',125),
  ('predicate_name -> LOWCASESTR','predicate_name',1,'p_predicate_name','rtec_parser.py',131),
  ('predicate_name -> HAPPENSAT','predicate_name',1,'p_predicate_name','rtec_parser.py',132),
  ('predicate_name -> INITIATEDAT','predicate_name',1,'p_predicate_name','rtec_parser.py',133),
  ('predicate_name -> TERMINATEDAT','predicate_name',1,'p_predicate_name','rtec_parser.py',134),
  ('predicate_name -> HOLDSFOR','predicate_name',1,'p_predicate_name','rtec_parser.py',135),
  ('predicate_name -> HOLDSAT','predicate_name',1,'p_predicate_name','rtec_parser.py',136),
]
