Generated Event Description: 
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Is1),
	holdsFor(=(stopped(Vessel),nearPorts),Is2),
	holdsFor(=(withinArea(Vessel,anchorage),true),Ia1),
	holdsFor(=(withinArea(Vessel,nearPorts),true),Ia2),
	relative_complement_all(Is1,list(Ia2),Iaf),
	intersect_all(list(Ia1,Iaf),Ianchored),
	holdsFor(=(withinArea(Vessel,nearPorts),true),InP),
	intersect_all(list(Is2,InP),Imoored),
	union_all(list(Ianchored,Imoored),I).


Ground Event Description: 
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Istfp),
	holdsFor(=(withinArea(Vessel,anchorage),true),Ia),
	intersect_all(list(Istfp,Ia),Ista),
	holdsFor(=(stopped(Vessel),nearPorts),Istnp),
	union_all(list(Ista,Istnp),Ii),
	thresholds(aOrMTime,AOrMTime),
	intDurGreater(Ii,AOrMTime,I).


Rule distances: 
[[0.509375]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Is1),
	holdsFor(=(stopped(Vessel),nearPorts),Is2),
	holdsFor(=(withinArea(Vessel,anchorage),true),Ia1),
	holdsFor(=(withinArea(Vessel,nearPorts),true),Ia2),
	relative_complement_all(Is1,list(Ia2),Iaf),
	intersect_all(list(Ia1,Iaf),Ianchored),
	holdsFor(=(withinArea(Vessel,nearPorts),true),InP),
	intersect_all(list(Is2,InP),Imoored),
	union_all(list(Ianchored,Imoored),I).

which has the distance array: [0.509375]

with the following rule: 
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Istfp),
	holdsFor(=(withinArea(Vessel,anchorage),true),Ia),
	intersect_all(list(Istfp,Ia),Ista),
	holdsFor(=(stopped(Vessel),nearPorts),Istnp),
	union_all(list(Ista,Istnp),Ii),
	thresholds(aOrMTime,AOrMTime),
	intDurGreater(Ii,AOrMTime,I).

Their distance is: 0.509375



Sum of distances for optimal rule assignment: 
0.509375
Distance between event descriptions: 
0.509375
Event Description Similarity: 
0.490625

Generated Event Description: 
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).


Ground Event Description: 
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

which has the distance array: [0.]

with the following rule: 
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Ground Event Description: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Rule distances: 
[[0.       0.140625]
 [0.140625 0.      ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

which has the distance array: [0.       0.140625]

with the following rule: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Their distance is: 0.0



We matched rule:
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

which has the distance array: [0.140625 0.      ]

with the following rule: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	thresholds(adriftAngThr,AdriftAngThr),
	is(AngleDifference,abs(-(CourseOverGround,TrueHeading))),
	>(AngleDifference,AdriftAngThr).


Ground Event Description: 
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	=\=(TrueHeading,511.0),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	>(AngleDiff,AdriftAngThr),
	holdsAt(=(underWay(Vessel),true),T).


Rule distances: 
[[0.55357143]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	thresholds(adriftAngThr,AdriftAngThr),
	is(AngleDifference,abs(-(CourseOverGround,TrueHeading))),
	>(AngleDifference,AdriftAngThr).

which has the distance array: [0.55357143]

with the following rule: 
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	=\=(TrueHeading,511.0),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	>(AngleDiff,AdriftAngThr),
	holdsAt(=(underWay(Vessel),true),T).

Their distance is: 0.5535714285714285



Sum of distances for optimal rule assignment: 
0.5535714285714285
Distance between event descriptions: 
0.5535714285714285
Event Description Similarity: 
0.4464285714285715

Generated Event Description: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	thresholds(adriftAngThr,AdriftAngThr),
	is(AngleDifference,abs(-(CourseOverGround,TrueHeading))),
	=<(AngleDifference,AdriftAngThr).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(stop_start(Vessel),T).

_dummy_rule :- 
	.


Ground Event Description: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=<(AngleDiff,AdriftAngThr).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,_CourseOverGround,511.0),T).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).


Rule distances: 
[[0.2625   0.6125   0.65625 ]
 [0.65625  0.140625 0.140625]
 [1.       1.       1.      ]]


Optimal Rule Assignment: 
[0 1 2]


We matched rule:
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	thresholds(adriftAngThr,AdriftAngThr),
	is(AngleDifference,abs(-(CourseOverGround,TrueHeading))),
	=<(AngleDifference,AdriftAngThr).

which has the distance array: [0.2625  0.6125  0.65625]

with the following rule: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=<(AngleDiff,AdriftAngThr).

Their distance is: 0.2625



We matched rule:
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(stop_start(Vessel),T).

which has the distance array: [0.65625  0.140625 0.140625]

with the following rule: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,_CourseOverGround,511.0),T).

Their distance is: 0.140625



We matched rule:
_dummy_rule :- 
	.

which has the distance array: [1. 1. 1.]

with the following rule: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
1.403125
Distance between event descriptions: 
0.4677083333333333
Event Description Similarity: 
0.5322916666666667

Generated Event Description: 
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).


Ground Event Description: 
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).


Rule distances: 
[[0.         0.57291667]
 [0.57291667 0.        ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

which has the distance array: [0.         0.57291667]

with the following rule: 
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Their distance is: 0.0



We matched rule:
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

which has the distance array: [0.57291667 0.        ]

with the following rule: 
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
terminatedAt(=(gap(Vessel),_Status),T) :- 
	happensAt(gap_end(Vessel),T).


Ground Event Description: 
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
terminatedAt(=(gap(Vessel),_Status),T) :- 
	happensAt(gap_end(Vessel),T).

which has the distance array: [0.]

with the following rule: 
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	>(Speed,HcNearCoastMax).


Ground Event Description: 
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	>(Speed,HcNearCoastMax),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	>(Speed,HcNearCoastMax).

which has the distance array: [0.]

with the following rule: 
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	>(Speed,HcNearCoastMax),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	=<(Speed,HcNearCoastMax).

terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(leavesArea(Vessel,_AreaID),T),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T).


Ground Event Description: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	<(Speed,HcNearCoastMax).

terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).


Rule distances: 
[[0.3203125 0.5703125]
 [0.6953125 0.59375  ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	=<(Speed,HcNearCoastMax).

which has the distance array: [0.3203125 0.5703125]

with the following rule: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	<(Speed,HcNearCoastMax).

Their distance is: 0.3203125



We matched rule:
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(leavesArea(Vessel,_AreaID),T),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T).

which has the distance array: [0.6953125 0.59375  ]

with the following rule: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Their distance is: 0.59375



Sum of distances for optimal rule assignment: 
0.9140625
Distance between event descriptions: 
0.45703125
Event Description Similarity: 
0.54296875

Generated Event Description: 
holdsFor(=(inSAR(Vessel),true),I) :- 
	holdsFor(=(sarSpeed(Vessel),true),Ispeed),
	holdsFor(=(sarMovement(Vessel),true),Imovement),
	intersect_all(list(Ispeed,Imovement),I).


Ground Event Description: 
holdsFor(=(inSAR(Vessel),true),I) :- 
	holdsFor(=(sarSpeed(Vessel),true),Iss),
	holdsFor(=(sarMovement(Vessel),true),Isc),
	intersect_all(list(Iss,Isc),Ii),
	intDurGreater(Ii,3600,I).


Rule distances: 
[[0.3]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(inSAR(Vessel),true),I) :- 
	holdsFor(=(sarSpeed(Vessel),true),Ispeed),
	holdsFor(=(sarMovement(Vessel),true),Imovement),
	intersect_all(list(Ispeed,Imovement),I).

which has the distance array: [0.3]

with the following rule: 
holdsFor(=(inSAR(Vessel),true),I) :- 
	holdsFor(=(sarSpeed(Vessel),true),Iss),
	holdsFor(=(sarMovement(Vessel),true),Isc),
	intersect_all(list(Iss,Isc),Ii),
	intDurGreater(Ii,3600,I).

Their distance is: 0.30000000000000004



Sum of distances for optimal rule assignment: 
0.30000000000000004
Distance between event descriptions: 
0.30000000000000004
Event Description Similarity: 
0.7

Generated Event Description: 
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(lowSpeed(Vessel),true),IlowSpeed),
	holdsFor(=(stopped(Vessel),farFromPorts),Iidle),
	holdsFor(=(anchoredOrMoored(Vessel),true),Ianm),
	holdsFor(=(withinArea(Vessel,nearCoast),true),ICoast),
	intersect_all(list(IlowSpeed,Iidle),Iloafing),
	relative_complement_all(Iloafing,list(Ianm,ICoast),Ifiltered),
	thresholds(loiteringTime,LoiteringTime),
	intDurGreater(Ifiltered,LoiteringTime,I).


Ground Event Description: 
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(lowSpeed(Vessel),true),Il),
	holdsFor(=(stopped(Vessel),farFromPorts),Is),
	union_all(list(Il,Is),Ils),
	holdsFor(=(withinArea(Vessel,nearCoast),true),Inc),
	holdsFor(=(anchoredOrMoored(Vessel),true),Iam),
	relative_complement_all(Ils,list(Inc,Iam),Ii),
	thresholds(loiteringTime,LoiteringTime),
	intDurGreater(Ii,LoiteringTime,I).


Rule distances: 
[[0.19907407]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(lowSpeed(Vessel),true),IlowSpeed),
	holdsFor(=(stopped(Vessel),farFromPorts),Iidle),
	holdsFor(=(anchoredOrMoored(Vessel),true),Ianm),
	holdsFor(=(withinArea(Vessel,nearCoast),true),ICoast),
	intersect_all(list(IlowSpeed,Iidle),Iloafing),
	relative_complement_all(Iloafing,list(Ianm,ICoast),Ifiltered),
	thresholds(loiteringTime,LoiteringTime),
	intDurGreater(Ifiltered,LoiteringTime,I).

which has the distance array: [0.19907407]

with the following rule: 
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(lowSpeed(Vessel),true),Il),
	holdsFor(=(stopped(Vessel),farFromPorts),Is),
	union_all(list(Il,Is),Ils),
	holdsFor(=(withinArea(Vessel,nearCoast),true),Inc),
	holdsFor(=(anchoredOrMoored(Vessel),true),Iam),
	relative_complement_all(Ils,list(Inc,Iam),Ii),
	thresholds(loiteringTime,LoiteringTime),
	intDurGreater(Ii,LoiteringTime,I).

Their distance is: 0.19907407407407407



Sum of distances for optimal rule assignment: 
0.19907407407407407
Distance between event descriptions: 
0.19907407407407407
Event Description Similarity: 
0.8009259259259259

Generated Event Description: 
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).


Ground Event Description: 
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

which has the distance array: [0.]

with the following rule: 
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Ground Event Description: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Rule distances: 
[[0.       0.140625]
 [0.140625 0.      ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

which has the distance array: [0.       0.140625]

with the following rule: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Their distance is: 0.0



We matched rule:
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

which has the distance array: [0.140625 0.      ]

with the following rule: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
terminatedAt(=(movingSpeed(Vessel),_),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(movingMin,MovingMin),
	<(Speed,MovingMin).

terminatedAt(=(movingSpeed(Vessel),_),T) :- 
	happensAt(gap_start(Vessel),T).


Ground Event Description: 
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	<(Speed,MovingMin).

terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(gap_start(Vessel),T).


Rule distances: 
[[0.        0.5703125]
 [0.5703125 0.       ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(movingSpeed(Vessel),_),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(movingMin,MovingMin),
	<(Speed,MovingMin).

which has the distance array: [0.        0.5703125]

with the following rule: 
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	<(Speed,MovingMin).

Their distance is: 0.0



We matched rule:
terminatedAt(=(movingSpeed(Vessel),_),T) :- 
	happensAt(gap_start(Vessel),T).

which has the distance array: [0.5703125 0.       ]

with the following rule: 
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(gap_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
holdsFor(=(pilotOps(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsPilot(Vessel1,Vessel2),
	holdsFor(=(lowSpeed(Vessel1),true),Il1),
	holdsFor(=(lowSpeed(Vessel2),true),Il2),
	intersect_all(list(Ip,Il1,Il2),IcloseSpeed),
	holdsFor(=(withinArea(Vessel1,nearCoast),true),In1),
	holdsFor(=(withinArea(Vessel2,nearCoast),true),In2),
	relative_complement_all(IcloseSpeed,list(In1,In2),Ifinal),
	\=(Ifinal,list),
	=(I,Ifinal).


Ground Event Description: 
holdsFor(=(pilotOps(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsPilot(Vessel1,Vessel2),
	holdsFor(=(lowSpeed(Vessel1),true),Il1),
	holdsFor(=(lowSpeed(Vessel2),true),Il2),
	holdsFor(=(stopped(Vessel1),farFromPorts),Is1),
	holdsFor(=(stopped(Vessel2),farFromPorts),Is2),
	union_all(list(Il1,Is1),I1b),
	union_all(list(Il2,Is2),I2b),
	intersect_all(list(I1b,I2b,Ip),Ii),
	\=(Ii,list),
	holdsFor(=(withinArea(Vessel1,nearCoast),true),Iw1),
	holdsFor(=(withinArea(Vessel2,nearCoast),true),Iw2),
	relative_complement_all(Ii,list(Iw1,Iw2),I).


Rule distances: 
[[0.45610119]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(pilotOps(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsPilot(Vessel1,Vessel2),
	holdsFor(=(lowSpeed(Vessel1),true),Il1),
	holdsFor(=(lowSpeed(Vessel2),true),Il2),
	intersect_all(list(Ip,Il1,Il2),IcloseSpeed),
	holdsFor(=(withinArea(Vessel1,nearCoast),true),In1),
	holdsFor(=(withinArea(Vessel2,nearCoast),true),In2),
	relative_complement_all(IcloseSpeed,list(In1,In2),Ifinal),
	\=(Ifinal,list),
	=(I,Ifinal).

which has the distance array: [0.45610119]

with the following rule: 
holdsFor(=(pilotOps(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsPilot(Vessel1,Vessel2),
	holdsFor(=(lowSpeed(Vessel1),true),Il1),
	holdsFor(=(lowSpeed(Vessel2),true),Il2),
	holdsFor(=(stopped(Vessel1),farFromPorts),Is1),
	holdsFor(=(stopped(Vessel2),farFromPorts),Is2),
	union_all(list(Il1,Is1),I1b),
	union_all(list(Il2,Is2),I2b),
	intersect_all(list(I1b,I2b,Ip),Ii),
	\=(Ii,list),
	holdsFor(=(withinArea(Vessel1,nearCoast),true),Iw1),
	holdsFor(=(withinArea(Vessel2,nearCoast),true),Iw2),
	relative_complement_all(Ii,list(Iw1,Iw2),I).

Their distance is: 0.4561011904761904



Sum of distances for optimal rule assignment: 
0.4561011904761904
Distance between event descriptions: 
0.4561011904761904
Event Description Similarity: 
0.5438988095238095

Generated Event Description: 
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).


Ground Event Description: 
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).


Rule distances: 
[[0.140625 0.      ]
 [0.       0.140625]]


Optimal Rule Assignment: 
[1 0]


We matched rule:
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

which has the distance array: [0.140625 0.      ]

with the following rule: 
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Their distance is: 0.0



We matched rule:
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

which has the distance array: [0.       0.140625]

with the following rule: 
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Ground Event Description: 
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

which has the distance array: [0.]

with the following rule: 
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	>(Speed,SarMinSpeed).


Ground Event Description: 
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	>(Speed,SarMinSpeed).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	>(Speed,SarMinSpeed).

which has the distance array: [0.]

with the following rule: 
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	>(Speed,SarMinSpeed).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	=<(Speed,SarMinSpeed).

terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Ground Event Description: 
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	<(Speed,SarMinSpeed).

terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Rule distances: 
[[0.3203125 0.5703125]
 [0.5703125 0.       ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	=<(Speed,SarMinSpeed).

which has the distance array: [0.3203125 0.5703125]

with the following rule: 
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	<(Speed,SarMinSpeed).

Their distance is: 0.3203125



We matched rule:
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

which has the distance array: [0.5703125 0.       ]

with the following rule: 
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.3203125
Distance between event descriptions: 
0.16015625
Event Description Similarity: 
0.83984375

Generated Event Description: 
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	>=(Speed,TrawlspeedMin),
	=<(Speed,TrawlspeedMax).


Ground Event Description: 
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	>(Speed,TrawlspeedMin),
	<(Speed,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).


Rule distances: 
[[0.36160714]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	>=(Speed,TrawlspeedMin),
	=<(Speed,TrawlspeedMax).

which has the distance array: [0.36160714]

with the following rule: 
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	>(Speed,TrawlspeedMin),
	<(Speed,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Their distance is: 0.36160714285714285



Sum of distances for optimal rule assignment: 
0.36160714285714285
Distance between event descriptions: 
0.36160714285714285
Event Description Similarity: 
0.6383928571428572

Generated Event Description: 
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,_TrawlspeedMax),
	<(Speed,TrawlspeedMin).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(trawlspeedMin,_TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	>(Speed,TrawlspeedMax).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

_dummy_rule :- 
	.


Ground Event Description: 
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	<(Speed,TrawlspeedMin).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	>(Speed,TrawlspeedMax).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).


Rule distances: 
[[0.       0.30625  0.65625  0.65625 ]
 [0.30625  0.       0.65625  0.65625 ]
 [0.65625  0.65625  0.       0.140625]
 [1.       1.       1.       1.      ]]


Optimal Rule Assignment: 
[0 1 2 3]


We matched rule:
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,_TrawlspeedMax),
	<(Speed,TrawlspeedMin).

which has the distance array: [0.      0.30625 0.65625 0.65625]

with the following rule: 
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	<(Speed,TrawlspeedMin).

Their distance is: 0.0



We matched rule:
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(trawlspeedMin,_TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	>(Speed,TrawlspeedMax).

which has the distance array: [0.30625 0.      0.65625 0.65625]

with the following rule: 
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	>(Speed,TrawlspeedMax).

Their distance is: 0.0



We matched rule:
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

which has the distance array: [0.65625  0.65625  0.       0.140625]

with the following rule: 
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

Their distance is: 0.0



We matched rule:
_dummy_rule :- 
	.

which has the distance array: [1. 1. 1. 1.]

with the following rule: 
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
1.0
Distance between event descriptions: 
0.25
Event Description Similarity: 
0.75

Generated Event Description: 
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(withinArea(Vessel,fishing),true),I1),
	holdsFor(=(trawlSpeed(Vessel),true),I2),
	holdsFor(=(trawlingMovement(Vessel),true),I3),
	intersect_all(list(I1,I2,I3),Ii),
	thresholds(trawlingTime,TrawlingTime),
	intDurGreater(Ii,TrawlingTime,I).


Ground Event Description: 
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(trawlSpeed(Vessel),true),It),
	holdsFor(=(trawlingMovement(Vessel),true),Itc),
	intersect_all(list(It,Itc),Ii),
	thresholds(trawlingTime,TrawlingTime),
	intDurGreater(Ii,TrawlingTime,I).


Rule distances: 
[[0.20089286]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(withinArea(Vessel,fishing),true),I1),
	holdsFor(=(trawlSpeed(Vessel),true),I2),
	holdsFor(=(trawlingMovement(Vessel),true),I3),
	intersect_all(list(I1,I2,I3),Ii),
	thresholds(trawlingTime,TrawlingTime),
	intDurGreater(Ii,TrawlingTime,I).

which has the distance array: [0.20089286]

with the following rule: 
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(trawlSpeed(Vessel),true),It),
	holdsFor(=(trawlingMovement(Vessel),true),Itc),
	intersect_all(list(It,Itc),Ii),
	thresholds(trawlingTime,TrawlingTime),
	intDurGreater(Ii,TrawlingTime,I).

Their distance is: 0.20089285714285712



Sum of distances for optimal rule assignment: 
0.20089285714285712
Distance between event descriptions: 
0.20089285714285712
Event Description Similarity: 
0.7991071428571429

Generated Event Description: 
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).


Ground Event Description: 
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

which has the distance array: [0.]

with the following rule: 
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

Generated Event Description: 
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(leavesArea(Vessel,_AreaID),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).


Ground Event Description: 
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).


Rule distances: 
[[0.59375]]


Optimal Rule Assignment: 
[0]


We matched rule:
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(leavesArea(Vessel,_AreaID),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

which has the distance array: [0.59375]

with the following rule: 
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Their distance is: 0.59375



Sum of distances for optimal rule assignment: 
0.59375
Distance between event descriptions: 
0.59375
Event Description Similarity: 
0.40625

Generated Event Description: 
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsTug(Vessel1,Vessel2),
	holdsFor(=(tuggingSpeed(Vessel1),true),Is1),
	holdsFor(=(tuggingSpeed(Vessel2),true),Is2),
	intersect_all(list(Ip,Is1,Is2),IcloseSpeed),
	thresholds(tuggingTime,TuggingTime),
	intDurGreater(IcloseSpeed,TuggingTime,I).


Ground Event Description: 
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsTug(Vessel1,Vessel2),
	-(oneIsPilot(Vessel1,Vessel2)),
	-(twoAreTugs(Vessel1,Vessel2)),
	holdsFor(=(tuggingSpeed(Vessel1),true),Its1),
	holdsFor(=(tuggingSpeed(Vessel2),true),Its2),
	intersect_all(list(Ip,Its1,Its2),Ii),
	thresholds(tuggingTime,TuggingTime),
	intDurGreater(Ii,TuggingTime,I).


Rule distances: 
[[0.2625]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsTug(Vessel1,Vessel2),
	holdsFor(=(tuggingSpeed(Vessel1),true),Is1),
	holdsFor(=(tuggingSpeed(Vessel2),true),Is2),
	intersect_all(list(Ip,Is1,Is2),IcloseSpeed),
	thresholds(tuggingTime,TuggingTime),
	intDurGreater(IcloseSpeed,TuggingTime,I).

which has the distance array: [0.2625]

with the following rule: 
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsTug(Vessel1,Vessel2),
	-(oneIsPilot(Vessel1,Vessel2)),
	-(twoAreTugs(Vessel1,Vessel2)),
	holdsFor(=(tuggingSpeed(Vessel1),true),Its1),
	holdsFor(=(tuggingSpeed(Vessel2),true),Its2),
	intersect_all(list(Ip,Its1,Its2),Ii),
	thresholds(tuggingTime,TuggingTime),
	intDurGreater(Ii,TuggingTime,I).

Their distance is: 0.2625



Sum of distances for optimal rule assignment: 
0.2625
Distance between event descriptions: 
0.2625
Event Description Similarity: 
0.7375

Generated Event Description: 
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	>=(Speed,TuggingMin),
	=<(Speed,TuggingMax).


Ground Event Description: 
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	>(Speed,TuggingMin),
	<(Speed,TuggingMax).


Rule distances: 
[[0.421875]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	>=(Speed,TuggingMin),
	=<(Speed,TuggingMax).

which has the distance array: [0.421875]

with the following rule: 
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	>(Speed,TuggingMin),
	<(Speed,TuggingMax).

Their distance is: 0.421875



Sum of distances for optimal rule assignment: 
0.421875
Distance between event descriptions: 
0.421875
Event Description Similarity: 
0.578125

Generated Event Description: 
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,_TuggingMax),
	<(Speed,TuggingMin).

terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(tuggingMin,_TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	>(Speed,TuggingMax).

terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Ground Event Description: 
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	<(Speed,TuggingMin).

terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	>(Speed,TuggingMax).

terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).


Rule distances: 
[[0.      0.30625 0.65625]
 [0.30625 0.      0.65625]
 [0.65625 0.65625 0.     ]]


Optimal Rule Assignment: 
[0 1 2]


We matched rule:
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,_TuggingMax),
	<(Speed,TuggingMin).

which has the distance array: [0.      0.30625 0.65625]

with the following rule: 
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	<(Speed,TuggingMin).

Their distance is: 0.0



We matched rule:
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CourseOverGround,_TrueHeading),T),
	thresholds(tuggingMin,_TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	>(Speed,TuggingMax).

which has the distance array: [0.30625 0.      0.65625]

with the following rule: 
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	>(Speed,TuggingMax).

Their distance is: 0.0



We matched rule:
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

which has the distance array: [0.65625 0.65625 0.     ]

with the following rule: 
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(gap_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0

