Event Description 1: 
terminatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MinServiceSpeed).

terminatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,MinServiceSpeed).

terminatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MaxServiceSpeed).

terminatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,MaxServiceSpeed).


Event Description 2: 
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

_dummy_rule :- 
	.

_dummy_rule :- 
	.


Rule distances: 
[[0.5234375  0.44791667 1.         1.        ]
 [0.5234375  0.44791667 1.         1.        ]
 [0.5234375  0.44791667 1.         1.        ]
 [0.5234375  0.44791667 1.         1.        ]]


Optimal Rule Assignment: 
[1 0 2 3]


We matched rule:
terminatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MinServiceSpeed).

which has the distance array: [0.5234375  0.44791667 1.         1.        ]

with the following rule: 
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Their distance is: 0.44791666666666663



We matched rule:
terminatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,MinServiceSpeed).

which has the distance array: [0.5234375  0.44791667 1.         1.        ]

with the following rule: 
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Their distance is: 0.5234375



We matched rule:
terminatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MaxServiceSpeed).

which has the distance array: [0.5234375  0.44791667 1.         1.        ]

with the following rule: 
_dummy_rule :- 
	.

Their distance is: 1.0



We matched rule:
terminatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,MaxServiceSpeed).

which has the distance array: [0.5234375  0.44791667 1.         1.        ]

with the following rule: 
_dummy_rule :- 
	.

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
2.9713541666666665
Distance between event descriptions: 
0.7428385416666666
Event Description Similarity: 
0.25716145833333337
Event Description 1: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,Vmin).

_dummy_rule :- 
	.


Event Description 2: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).


Rule distances: 
[[0.42708333 0.42708333]
 [1.         1.        ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,Vmin).

which has the distance array: [0.42708333 0.42708333]

with the following rule: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Their distance is: 0.4270833333333333



We matched rule:
_dummy_rule :- 
	.

which has the distance array: [1. 1.]

with the following rule: 
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
1.4270833333333333
Distance between event descriptions: 
0.7135416666666666
Event Description Similarity: 
0.28645833333333337
Event Description 1: 
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CoG,_TrueHeading),T),
	holdsAt(=(trawlingSpeed(Vessel),true),T),
	checkHeadingVariability(Vessel,T).


Event Description 2: 
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).


Rule distances: 
[[0.5234375]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CoG,_TrueHeading),T),
	holdsAt(=(trawlingSpeed(Vessel),true),T),
	checkHeadingVariability(Vessel,T).

which has the distance array: [0.5234375]

with the following rule: 
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Their distance is: 0.5234375



Sum of distances for optimal rule assignment: 
0.5234375
Distance between event descriptions: 
0.5234375
Event Description Similarity: 
0.4765625
Event Description 1: 
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,CurrentSpeed,_,_),T),
	holdsAt(=(velocity(Vessel,PreviousSpeed,_,_),previous(T)),Tprev),
	/(abs(-(CurrentSpeed,PreviousSpeed)),>(PreviousSpeed,/(a,100))).


Event Description 2: 
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).


Rule distances: 
[[0.6953125]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,CurrentSpeed,_,_),T),
	holdsAt(=(velocity(Vessel,PreviousSpeed,_,_),previous(T)),Tprev),
	/(abs(-(CurrentSpeed,PreviousSpeed)),>(PreviousSpeed,/(a,100))).

which has the distance array: [0.6953125]

with the following rule: 
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Their distance is: 0.6953125



Sum of distances for optimal rule assignment: 
0.6953125
Distance between event descriptions: 
0.6953125
Event Description Similarity: 
0.3046875
Event Description 1: 
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CoG,_TrueHeading),T),
	-(holdsAt(=(trawlingSpeed(Vessel),true),T)).

terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	-(checkHeadingVariability(Vessel,T)).


Event Description 2: 
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

_dummy_rule :- 
	.


Rule distances: 
[[0.59375  1.      ]
 [0.640625 1.      ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_CoG,_TrueHeading),T),
	-(holdsAt(=(trawlingSpeed(Vessel),true),T)).

which has the distance array: [0.59375 1.     ]

with the following rule: 
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Their distance is: 0.59375



We matched rule:
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	-(checkHeadingVariability(Vessel,T)).

which has the distance array: [0.640625 1.      ]

with the following rule: 
_dummy_rule :- 
	.

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
1.59375
Distance between event descriptions: 
0.796875
Event Description Similarity: 
0.203125
Event Description 1: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,CurrentSpeed,_,_),T),
	holdsAt(=(velocity(Vessel,PreviousSpeed,_,_),previous(T)),Tprev),
	/(abs(-(CurrentSpeed,PreviousSpeed)),=<(PreviousSpeed,/(a,100))).

_dummy_rule :- 
	.


Event Description 2: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).


Rule distances: 
[[0.6953125 0.6953125]
 [1.        1.       ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,CurrentSpeed,_,_),T),
	holdsAt(=(velocity(Vessel,PreviousSpeed,_,_),previous(T)),Tprev),
	/(abs(-(CurrentSpeed,PreviousSpeed)),=<(PreviousSpeed,/(a,100))).

which has the distance array: [0.6953125 0.6953125]

with the following rule: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Their distance is: 0.6953125



We matched rule:
_dummy_rule :- 
	.

which has the distance array: [1. 1.]

with the following rule: 
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
1.6953125
Distance between event descriptions: 
0.84765625
Event Description Similarity: 
0.15234375
Event Description 1: 
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(withinArea(Vessel,Area),true),Ia),
	holdsFor(=(velocity(Vessel,Speed,_,_),stopped),Iv),
	intersect_all(list(Ia,Iv),I),
	threshold(vloiter,Vloiter),
	intDurGreater(I,Vloiter,I).


Event Description 2: 
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(lowSpeed(Vessel),true),Il),
	holdsFor(=(stopped(Vessel),farFromPorts),Is),
	union_all(list(Il,Is),Ils),
	holdsFor(=(withinArea(Vessel,nearCoast),true),Inc),
	holdsFor(=(anchoredOrMoored(Vessel),true),Iam),
	relative_complement_all(Ils,list(Inc,Iam),Ii),
	thresholds(loiteringTime,LoiteringTime),
	intDurGreater(Ii,LoiteringTime,I).


Rule distances: 
[[0.71527778]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(withinArea(Vessel,Area),true),Ia),
	holdsFor(=(velocity(Vessel,Speed,_,_),stopped),Iv),
	intersect_all(list(Ia,Iv),I),
	threshold(vloiter,Vloiter),
	intDurGreater(I,Vloiter,I).

which has the distance array: [0.71527778]

with the following rule: 
holdsFor(=(loitering(Vessel),true),I) :- 
	holdsFor(=(lowSpeed(Vessel),true),Il),
	holdsFor(=(stopped(Vessel),farFromPorts),Is),
	union_all(list(Il,Is),Ils),
	holdsFor(=(withinArea(Vessel,nearCoast),true),Inc),
	holdsFor(=(anchoredOrMoored(Vessel),true),Iam),
	relative_complement_all(Ils,list(Inc,Iam),Ii),
	thresholds(loiteringTime,LoiteringTime),
	intDurGreater(Ii,LoiteringTime,I).

Their distance is: 0.7152777777777778



Sum of distances for optimal rule assignment: 
0.7152777777777778
Distance between event descriptions: 
0.7152777777777778
Event Description Similarity: 
0.2847222222222222
Event Description 1: 
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	holdsAt(=(withinArea(Vessel,nearCoast),true),T),
	velocity(Vessel,Speed,_,T),
	>(Speed,5).


Event Description 2: 
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	-(inRange(Speed,0,HcNearCoastMax)),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T).


Rule distances: 
[[0.709375]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	holdsAt(=(withinArea(Vessel,nearCoast),true),T),
	velocity(Vessel,Speed,_,T),
	>(Speed,5).

which has the distance array: [0.709375]

with the following rule: 
initiatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	-(inRange(Speed,0,HcNearCoastMax)),
	holdsAt(=(withinArea(Vessel,nearCoast),true),T).

Their distance is: 0.7093750000000001



Sum of distances for optimal rule assignment: 
0.7093750000000001
Distance between event descriptions: 
0.7093750000000001
Event Description Similarity: 
0.2906249999999999
Event Description 1: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(leavesArea(Vessel,nearCoast),T).

terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	velocity(Vessel,Speed,_,T),
	=<(Speed,5).


Event Description 2: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	inRange(Speed,0,HcNearCoastMax).

terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).


Rule distances: 
[[0.5703125  0.140625  ]
 [0.8203125  0.76041667]]


Optimal Rule Assignment: 
[1 0]


We matched rule:
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(leavesArea(Vessel,nearCoast),T).

which has the distance array: [0.5703125 0.140625 ]

with the following rule: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Their distance is: 0.140625



We matched rule:
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	velocity(Vessel,Speed,_,T),
	=<(Speed,5).

which has the distance array: [0.8203125  0.76041667]

with the following rule: 
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(hcNearCoastMax,HcNearCoastMax),
	inRange(Speed,0,HcNearCoastMax).

Their distance is: 0.8203125



Sum of distances for optimal rule assignment: 
0.9609375
Distance between event descriptions: 
0.48046875
Event Description Similarity: 
0.51953125
Event Description 1: 
holdsFor(=(rendezVous(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	holdsFor(=(stopped(Vessel1),true),Is1),
	holdsFor(=(stopped(Vessel2),true),Is2),
	union_all(list(Is1,Is2),Is),
	intersect_all(list(Ip,Is),I).


Event Description 2: 
holdsFor(=(rendezVous(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	-(oneIsTug(Vessel1,Vessel2)),
	-(oneIsPilot(Vessel1,Vessel2)),
	holdsFor(=(lowSpeed(Vessel1),true),Il1),
	holdsFor(=(lowSpeed(Vessel2),true),Il2),
	holdsFor(=(stopped(Vessel1),farFromPorts),Is1),
	holdsFor(=(stopped(Vessel2),farFromPorts),Is2),
	union_all(list(Il1,Is1),I1b),
	union_all(list(Il2,Is2),I2b),
	intersect_all(list(I1b,I2b,Ip),If),
	\=(If,list),
	holdsFor(=(withinArea(Vessel1,nearPorts),true),Iw1),
	holdsFor(=(withinArea(Vessel2,nearPorts),true),Iw2),
	holdsFor(=(withinArea(Vessel1,nearCoast),true),Iw3),
	holdsFor(=(withinArea(Vessel2,nearCoast),true),Iw4),
	relative_complement_all(If,list(Iw1,Iw2,Iw3,Iw4),Ii),
	thresholds(rendezvousTime,RendezvousTime),
	intDurGreater(Ii,RendezvousTime,I).


Rule distances: 
[[0.74835526]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(rendezVous(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	holdsFor(=(stopped(Vessel1),true),Is1),
	holdsFor(=(stopped(Vessel2),true),Is2),
	union_all(list(Is1,Is2),Is),
	intersect_all(list(Ip,Is),I).

which has the distance array: [0.74835526]

with the following rule: 
holdsFor(=(rendezVous(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	-(oneIsTug(Vessel1,Vessel2)),
	-(oneIsPilot(Vessel1,Vessel2)),
	holdsFor(=(lowSpeed(Vessel1),true),Il1),
	holdsFor(=(lowSpeed(Vessel2),true),Il2),
	holdsFor(=(stopped(Vessel1),farFromPorts),Is1),
	holdsFor(=(stopped(Vessel2),farFromPorts),Is2),
	union_all(list(Il1,Is1),I1b),
	union_all(list(Il2,Is2),I2b),
	intersect_all(list(I1b,I2b,Ip),If),
	\=(If,list),
	holdsFor(=(withinArea(Vessel1,nearPorts),true),Iw1),
	holdsFor(=(withinArea(Vessel2,nearPorts),true),Iw2),
	holdsFor(=(withinArea(Vessel1,nearCoast),true),Iw3),
	holdsFor(=(withinArea(Vessel2,nearCoast),true),Iw4),
	relative_complement_all(If,list(Iw1,Iw2,Iw3,Iw4),Ii),
	thresholds(rendezvousTime,RendezvousTime),
	intDurGreater(Ii,RendezvousTime,I).

Their distance is: 0.7483552631578947



Sum of distances for optimal rule assignment: 
0.7483552631578947
Distance between event descriptions: 
0.7483552631578947
Event Description Similarity: 
0.2516447368421053
Event Description 1: 
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,AreaID),T),
	areaType(AreaID,AreaType).


Event Description 2: 
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,AreaID),T),
	areaType(AreaID,AreaType).

which has the distance array: [0.]

with the following rule: 
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0
Event Description 1: 
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).


Event Description 2: 
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).


Rule distances: 
[[0.         0.57291667]
 [0.57291667 0.        ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

which has the distance array: [0.         0.57291667]

with the following rule: 
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Their distance is: 0.0



We matched rule:
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

which has the distance array: [0.57291667 0.        ]

with the following rule: 
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0
Event Description 1: 
terminatedAt(=(gap(Vessel),_Value),T) :- 
	happensAt(gap_end(Vessel),T).


Event Description 2: 
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
terminatedAt(=(gap(Vessel),_Value),T) :- 
	happensAt(gap_end(Vessel),T).

which has the distance array: [0.]

with the following rule: 
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0
Event Description 1: 
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,AreaID),T),
	areaType(AreaID,AreaType).

terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).


Event Description 2: 
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).


Rule distances: 
[[0.         0.42708333]
 [0.42708333 0.        ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,AreaID),T),
	areaType(AreaID,AreaType).

which has the distance array: [0.         0.42708333]

with the following rule: 
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Their distance is: 0.0



We matched rule:
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

which has the distance array: [0.42708333 0.        ]

with the following rule: 
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0
Event Description 1: 
initiatedAt(=(stopped(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,LowThreshold).

_dummy_rule :- 
	.


Event Description 2: 
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).


Rule distances: 
[[0.61458333 0.61458333]
 [1.         1.        ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
initiatedAt(=(stopped(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	=<(Speed,LowThreshold).

which has the distance array: [0.61458333 0.61458333]

with the following rule: 
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Their distance is: 0.6145833333333333



We matched rule:
_dummy_rule :- 
	.

which has the distance array: [1. 1.]

with the following rule: 
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
1.6145833333333333
Distance between event descriptions: 
0.8072916666666666
Event Description Similarity: 
0.19270833333333337
Event Description 1: 
terminatedAt(=(stopped(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,LowThreshold).

_dummy_rule :- 
	.


Event Description 2: 
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).


Rule distances: 
[[0.44791667 0.44791667]
 [1.         1.        ]]


Optimal Rule Assignment: 
[0 1]


We matched rule:
terminatedAt(=(stopped(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,LowThreshold).

which has the distance array: [0.44791667 0.44791667]

with the following rule: 
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Their distance is: 0.44791666666666663



We matched rule:
_dummy_rule :- 
	.

which has the distance array: [1. 1.]

with the following rule: 
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
1.4479166666666665
Distance between event descriptions: 
0.7239583333333333
Event Description Similarity: 
0.27604166666666674
Event Description 1: 
holdsFor(=(underWay(Vessel),true),I) :- 
	holdsFor(=(movingSpeed(Vessel),below),Ib),
	holdsFor(=(movingSpeed(Vessel),normal),In),
	holdsFor(=(movingSpeed(Vessel),above),Ia),
	union_all(list(Ib,In,Ia),I).


Event Description 2: 
holdsFor(=(underWay(Vessel),true),I) :- 
	holdsFor(=(movingSpeed(Vessel),below),I1),
	holdsFor(=(movingSpeed(Vessel),normal),I2),
	holdsFor(=(movingSpeed(Vessel),above),I3),
	union_all(list(I1,I2,I3),I).


Rule distances: 
[[0.]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(underWay(Vessel),true),I) :- 
	holdsFor(=(movingSpeed(Vessel),below),Ib),
	holdsFor(=(movingSpeed(Vessel),normal),In),
	holdsFor(=(movingSpeed(Vessel),above),Ia),
	union_all(list(Ib,In,Ia),I).

which has the distance array: [0.]

with the following rule: 
holdsFor(=(underWay(Vessel),true),I) :- 
	holdsFor(=(movingSpeed(Vessel),below),I1),
	holdsFor(=(movingSpeed(Vessel),normal),I2),
	holdsFor(=(movingSpeed(Vessel),above),I3),
	union_all(list(I1,I2,I3),I).

Their distance is: 0.0



Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0
Event Description 1: 
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(velocity(Vessel,Speed),trawlingSpeed),I1),
	holdsFor(=(withinArea(Vessel,fishingArea),true),I2),
	intersect_all(list(I1,I2),I).


Event Description 2: 
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(trawlSpeed(Vessel),true),It),
	holdsFor(=(trawlingMovement(Vessel),true),Itc),
	intersect_all(list(It,Itc),Ii),
	thresholds(trawlingTime,TrawlingTime),
	intDurGreater(Ii,TrawlingTime,I).


Rule distances: 
[[0.453125]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(velocity(Vessel,Speed),trawlingSpeed),I1),
	holdsFor(=(withinArea(Vessel,fishingArea),true),I2),
	intersect_all(list(I1,I2),I).

which has the distance array: [0.453125]

with the following rule: 
holdsFor(=(trawling(Vessel),true),I) :- 
	holdsFor(=(trawlSpeed(Vessel),true),It),
	holdsFor(=(trawlingMovement(Vessel),true),Itc),
	intersect_all(list(It,Itc),Ii),
	thresholds(trawlingTime,TrawlingTime),
	intDurGreater(Ii,TrawlingTime,I).

Their distance is: 0.453125



Sum of distances for optimal rule assignment: 
0.453125
Distance between event descriptions: 
0.453125
Event Description Similarity: 
0.546875
Event Description 1: 
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	countRecentMessagesUnderThreshold(Vessel,Tmin,NumMessages,Vmin),
	>=(NumMessages,m).


Event Description 2: 
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).


Rule distances: 
[[0.76041667]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	countRecentMessagesUnderThreshold(Vessel,Tmin,NumMessages,Vmin),
	>=(NumMessages,m).

which has the distance array: [0.76041667]

with the following rule: 
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Their distance is: 0.7604166666666666



Sum of distances for optimal rule assignment: 
0.7604166666666666
Distance between event descriptions: 
0.7604166666666666
Event Description Similarity: 
0.23958333333333337
Event Description 1: 
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,CoG,_TrueHeading),T),
	holdsAt(=(driftingConditions(CoG,Speed),true),T).


Event Description 2: 
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	=\=(TrueHeading,511.0),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	>(AngleDiff,AdriftAngThr),
	holdsAt(=(underWay(Vessel),true),T).


Rule distances: 
[[0.60267857]]


Optimal Rule Assignment: 
[0]


We matched rule:
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,CoG,_TrueHeading),T),
	holdsAt(=(driftingConditions(CoG,Speed),true),T).

which has the distance array: [0.60267857]

with the following rule: 
initiatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	=\=(TrueHeading,511.0),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	>(AngleDiff,AdriftAngThr),
	holdsAt(=(underWay(Vessel),true),T).

Their distance is: 0.6026785714285714



Sum of distances for optimal rule assignment: 
0.6026785714285714
Distance between event descriptions: 
0.6026785714285714
Event Description Similarity: 
0.3973214285714286
Event Description 1: 
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	holdsFor(=(lowSpeed(Vessel1),true),Is1),
	holdsFor(=(lowSpeed(Vessel2),true),Is2),
	intersect_all(list(Ip,Is1,Is2),I).


Event Description 2: 
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsTug(Vessel1,Vessel2),
	-(oneIsPilot(Vessel1,Vessel2)),
	-(twoAreTugs(Vessel1,Vessel2)),
	holdsFor(=(tuggingSpeed(Vessel1),true),Its1),
	holdsFor(=(tuggingSpeed(Vessel2),true),Its2),
	intersect_all(list(Ip,Its1,Its2),Ii),
	thresholds(tuggingTime,TuggingTime),
	intDurGreater(Ii,TuggingTime,I).


Rule distances: 
[[0.56875]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	holdsFor(=(lowSpeed(Vessel1),true),Is1),
	holdsFor(=(lowSpeed(Vessel2),true),Is2),
	intersect_all(list(Ip,Is1,Is2),I).

which has the distance array: [0.56875]

with the following rule: 
holdsFor(=(tugging(Vessel1,Vessel2),true),I) :- 
	holdsFor(=(proximity(Vessel1,Vessel2),true),Ip),
	oneIsTug(Vessel1,Vessel2),
	-(oneIsPilot(Vessel1,Vessel2)),
	-(twoAreTugs(Vessel1,Vessel2)),
	holdsFor(=(tuggingSpeed(Vessel1),true),Its1),
	holdsFor(=(tuggingSpeed(Vessel2),true),Its2),
	intersect_all(list(Ip,Its1,Its2),Ii),
	thresholds(tuggingTime,TuggingTime),
	intDurGreater(Ii,TuggingTime,I).

Their distance is: 0.56875



Sum of distances for optimal rule assignment: 
0.56875
Distance between event descriptions: 
0.56875
Event Description Similarity: 
0.43125
Event Description 1: 
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Isffp),
	holdsFor(=(withinArea(Vessel,anchorage),true),Iwa),
	intersect_all(list(Isffp,Iwa),Isa),
	holdsFor(=(stopped(Vessel),nearPorts),Isn),
	union_all(list(Isa,Isn),Ii),
	threshold(vaorm,Vaorm),
	intDurGreater(Ii,Vaorm,I).


Event Description 2: 
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Istfp),
	holdsFor(=(withinArea(Vessel,anchorage),true),Ia),
	intersect_all(list(Istfp,Ia),Ista),
	holdsFor(=(stopped(Vessel),nearPorts),Istnp),
	union_all(list(Ista,Istnp),Ii),
	thresholds(aOrMTime,AOrMTime),
	intDurGreater(Ii,AOrMTime,I).


Rule distances: 
[[0.14583333]]


Optimal Rule Assignment: 
[0]


We matched rule:
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Isffp),
	holdsFor(=(withinArea(Vessel,anchorage),true),Iwa),
	intersect_all(list(Isffp,Iwa),Isa),
	holdsFor(=(stopped(Vessel),nearPorts),Isn),
	union_all(list(Isa,Isn),Ii),
	threshold(vaorm,Vaorm),
	intDurGreater(Ii,Vaorm,I).

which has the distance array: [0.14583333]

with the following rule: 
holdsFor(=(anchoredOrMoored(Vessel),true),I) :- 
	holdsFor(=(stopped(Vessel),farFromPorts),Istfp),
	holdsFor(=(withinArea(Vessel,anchorage),true),Ia),
	intersect_all(list(Istfp,Ia),Ista),
	holdsFor(=(stopped(Vessel),nearPorts),Istnp),
	union_all(list(Ista,Istnp),Ii),
	thresholds(aOrMTime,AOrMTime),
	intDurGreater(Ii,AOrMTime,I).

Their distance is: 0.14583333333333334



Sum of distances for optimal rule assignment: 
0.14583333333333334
Distance between event descriptions: 
0.14583333333333334
Event Description Similarity: 
0.8541666666666666
Event Description 1: 
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,0.5),
	=<(Speed,MinServiceSpeed).

initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MinServiceSpeed),
	=<(Speed,MaxServiceSpeed).

initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MaxServiceSpeed).


Event Description 2: 
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).


Rule distances: 
[[0.68229167 0.63125    0.63125   ]
 [0.69270833 0.61875    0.63125   ]
 [0.69270833 0.63125    0.61875   ]]


Optimal Rule Assignment: 
[0 1 2]


We matched rule:
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,0.5),
	=<(Speed,MinServiceSpeed).

which has the distance array: [0.68229167 0.63125    0.63125   ]

with the following rule: 
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Their distance is: 0.6822916666666666



We matched rule:
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MinServiceSpeed),
	=<(Speed,MaxServiceSpeed).

which has the distance array: [0.69270833 0.61875    0.63125   ]

with the following rule: 
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Their distance is: 0.61875



We matched rule:
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	>(Speed,MaxServiceSpeed).

which has the distance array: [0.69270833 0.63125    0.61875   ]

with the following rule: 
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Their distance is: 0.61875



Sum of distances for optimal rule assignment: 
1.9197916666666668
Distance between event descriptions: 
0.6399305555555556
Event Description Similarity: 
0.36006944444444444
Event Description 1: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,CoG,_TrueHeading),T),
	-(holdsAt(=(driftingConditions(CoG,Speed),true),T)).

_dummy_rule :- 
	.

_dummy_rule :- 
	.


Event Description 2: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=<(AngleDiff,AdriftAngThr).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,_CourseOverGround,511.0),T).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).


Rule distances: 
[[0.71875 0.53125 0.59375]
 [1.      1.      1.     ]
 [1.      1.      1.     ]]


Optimal Rule Assignment: 
[1 0 2]


We matched rule:
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,CoG,_TrueHeading),T),
	-(holdsAt(=(driftingConditions(CoG,Speed),true),T)).

which has the distance array: [0.71875 0.53125 0.59375]

with the following rule: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,_CourseOverGround,511.0),T).

Their distance is: 0.53125



We matched rule:
_dummy_rule :- 
	.

which has the distance array: [1. 1. 1.]

with the following rule: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=<(AngleDiff,AdriftAngThr).

Their distance is: 1.0



We matched rule:
_dummy_rule :- 
	.

which has the distance array: [1. 1. 1.]

with the following rule: 
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Their distance is: 1.0



Sum of distances for optimal rule assignment: 
2.53125
Distance between event descriptions: 
0.84375
Event Description Similarity: 
0.15625
