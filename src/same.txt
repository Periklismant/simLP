Illegal character '0'
Syntax error at token COMMA
Syntax error at token DOT
Illegal character '0'
Syntax error at token COMMA
Syntax error at token UNIONALL
Illegal character '\'
Syntax error at token EQUAL
Illegal character '0'
Syntax error at token COMMA
Syntax error at token COMMA
Illegal character '>'
Syntax error at token DOT
Illegal character '<'
Syntax error at token DOT
Illegal character '0'
Syntax error at token INTERSECTALL
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token INTERSECTALL
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token UNIONALL
Illegal character '\'
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token DOT
Syntax error at token INTERSECTALL
Syntax error at token COMMA
Syntax error at token DOT
Illegal character '0'
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token DOT
Syntax error at token INTERSECTALL
Syntax error at token DOT
Syntax error at token UNIONALL
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token UNIONALL
Illegal character '\'
Syntax error at token COMMA
Syntax error at token COMMA
Illegal character '0'
Syntax error at token COMMA
Syntax error at token DOT
Illegal character '0'
Syntax error at token COMMA
Syntax error at token UNIONALL
Illegal character '\'
Syntax error at token EQUAL
Illegal character '0'
Syntax error at token COMMA
Syntax error at token COMMA
Illegal character '>'
Syntax error at token DOT
Illegal character '<'
Syntax error at token DOT
Illegal character '0'
Syntax error at token INTERSECTALL
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token INTERSECTALL
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token UNIONALL
Illegal character '\'
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token DOT
Syntax error at token INTERSECTALL
Syntax error at token COMMA
Syntax error at token DOT
Illegal character '0'
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token DOT
Syntax error at token INTERSECTALL
Syntax error at token DOT
Syntax error at token UNIONALL
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token COMMA
Syntax error at token DOT
Syntax error at token UNIONALL
Illegal character '\'
Syntax error at token COMMA
Syntax error at token COMMA
Event Description 1: 
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).


Event Description 2: 
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).


Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0. 1.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.125
Distance between rules: 
0.41666666666666663

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(gap_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(gap_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(stop_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(slow_motion_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(slow_motion_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(change_in_speed_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(change_in_speed_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(end(=(underWay(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.0625
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[thresholds(trawlingCrs,TrawlingCrs), _]
2
1
Body atom distances: 
[[1. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[1 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.0625
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(change_in_heading(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.125
Distance between rules: 
0.41666666666666663

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0. 1.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.015625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(gap_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.421875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(gap_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(stop_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(slow_motion_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(slow_motion_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(change_in_speed_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(change_in_speed_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(end(=(underWay(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[thresholds(trawlingCrs,TrawlingCrs), _]
2
1
Body atom distances: 
[[1. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[1 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(change_in_heading(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.015625
[happensAt(gap_start(Vessel),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.421875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0
[happensAt(gap_start(Vessel),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.6666666666666666

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.6666666666666666

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(gap_start(Vessel),T), _]
2
1
Body atom distances: 
[[0. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.6666666666666666

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0. 1.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0. 1.]
 [1. 1.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.35416666666666663

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(gap_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.125
Distance between rules: 
0.10416666666666666

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(stop_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(slow_motion_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(slow_motion_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(change_in_speed_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(change_in_speed_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(end(=(underWay(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
2
Body atom distances: 
[[0.25     1.       1.       1.       1.      ]
 [1.       1.       1.       1.       0.015625]
 [0.       0.       0.       0.       0.      ]
 [0.       0.       0.       0.       0.      ]
 [0.       0.       0.       0.       0.      ]]
Optimal Body Condition Assignment: 
[0 4 1 2 3]
Sum of distances for optimal body condition assignment: 
0.265625
Distance between rule bodies: 
0.6531250000000001
Distance between rules: 
0.5651041666666667

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
2
Body atom distances: 
[[0.25     1.      ]
 [1.       0.015625]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.265625
Distance between rule bodies: 
0.1328125
Distance between rules: 
0.13020833333333331

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[thresholds(trawlingCrs,TrawlingCrs), _]
2
1
Body atom distances: 
[[1. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[1 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(change_in_heading(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(gap_start(Vessel),T), _]
2
1
Body atom distances: 
[[0. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.6666666666666666

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0. 1.]
 [1. 1.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.35416666666666663

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0. 1.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(gap_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.0625
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.125
Distance between rules: 
0.10416666666666666

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(stop_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(slow_motion_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(slow_motion_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(change_in_speed_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(change_in_speed_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   0.5 ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.5833333333333333
Distance between rules: 
0.6875

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(end(=(underWay(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   0.5 ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.6875
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   0.5 ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.6875
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[thresholds(trawlingCrs,TrawlingCrs), _]
2
1
Body atom distances: 
[[1. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[1 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(change_in_heading(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0
[happensAt(gap_end(Vessel),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(gap_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(gap_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.0625
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.125
Distance between rules: 
0.10416666666666666

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(gap_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0. 1.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.0625
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0. 1.]
 [1. 1.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.35416666666666663

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(stop_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(slow_motion_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(slow_motion_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(change_in_speed_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(change_in_speed_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(end(=(underWay(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
2
Body atom distances: 
[[0.25     1.       1.       1.       1.      ]
 [1.       1.       1.       1.       0.015625]
 [0.       0.       0.       0.       0.      ]
 [0.       0.       0.       0.       0.      ]
 [0.       0.       0.       0.       0.      ]]
Optimal Body Condition Assignment: 
[0 4 1 2 3]
Sum of distances for optimal body condition assignment: 
0.265625
Distance between rule bodies: 
0.6531250000000001
Distance between rules: 
0.5651041666666667

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
2
Body atom distances: 
[[0.25     1.      ]
 [1.       0.015625]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.265625
Distance between rule bodies: 
0.1328125
Distance between rules: 
0.13020833333333331

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[thresholds(trawlingCrs,TrawlingCrs), _]
2
1
Body atom distances: 
[[1. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[1 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(change_in_heading(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(gap_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.0625
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.125
Distance between rules: 
0.10416666666666666

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(gap_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.0625
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0. 1.]
 [1. 1.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.35416666666666663

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0. 1.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(stop_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(slow_motion_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(slow_motion_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(change_in_speed_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(change_in_speed_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   0.5 ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.5833333333333333
Distance between rules: 
0.6875

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(end(=(underWay(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   0.5 ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.6875
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   0.5 ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.6875
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[thresholds(trawlingCrs,TrawlingCrs), _]
2
1
Body atom distances: 
[[1. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[1 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(change_in_heading(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0
[happensAt(stop_end(Vessel),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.0625
[happensAt(stop_end(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.0625
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(stop_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_start(Vessel),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(slow_motion_start(Vessel),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(slow_motion_start(Vessel),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(slow_motion_start(Vessel),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(slow_motion_start(Vessel),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(slow_motion_start(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(slow_motion_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(slow_motion_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_start(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_start(Vessel),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_start(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(slow_motion_end(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(slow_motion_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_start(Vessel),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_start(Vessel),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_start(Vessel),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_start(Vessel),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_start(Vessel),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_start(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_start(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_start(Vessel),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_start(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_start(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_end(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_speed_end(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.046875

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.0078125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0078125
Distance between rule bodies: 
0.0078125
Distance between rules: 
0.03515625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.0078125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0078125
Distance between rule bodies: 
0.0078125
Distance between rules: 
0.03515625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(gap_start(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(gap_end(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(stop_end(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(slow_motion_start(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(slow_motion_end(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(change_in_speed_start(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(change_in_speed_end(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
5
Body atom distances: 
[[0. 1. 1. 1. 1.]
 [1. 0. 1. 1. 1.]
 [1. 1. 0. 1. 1.]
 [1. 1. 1. 0. 1.]
 [1. 1. 1. 1. 0.]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max), _]
5
4
Body atom distances: 
[[0.         1.         1.         1.         0.        ]
 [1.         0.         1.         1.         0.        ]
 [1.         1.         0.125      1.         0.        ]
 [1.         1.         1.         1.         0.        ]
 [1.         1.         1.         0.33333333 0.        ]]
Optimal Body Condition Assignment: 
[0 1 2 4 3]
Sum of distances for optimal body condition assignment: 
0.4583333333333333
Distance between rule bodies: 
0.2916666666666667
Distance between rules: 
0.2534722222222222

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf), _]
5
4
Body atom distances: 
[[0.         1.         1.         1.         0.        ]
 [1.         0.         1.         1.         0.        ]
 [1.         1.         0.25       1.         0.        ]
 [1.         1.         1.         1.         0.        ]
 [1.         1.         1.         0.33333333 0.        ]]
Optimal Body Condition Assignment: 
[0 1 2 4 3]
Sum of distances for optimal body condition assignment: 
0.5833333333333333
Distance between rule bodies: 
0.31666666666666665
Distance between rules: 
0.2743055555555555

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _, _]
5
3
Body atom distances: 
[[0. 1. 1. 0. 0.]
 [1. 1. 1. 0. 0.]
 [1. 1. 1. 0. 0.]
 [1. 0. 1. 0. 0.]
 [1. 1. 1. 0. 0.]]
Optimal Body Condition Assignment: 
[0 3 4 1 2]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.6000000000000001
Distance between rules: 
0.6666666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr), _]
5
4
Body atom distances: 
[[0.03125 1.      1.      1.      0.     ]
 [1.      1.      1.      1.      0.     ]
 [1.      1.      1.      1.      0.     ]
 [1.      1.      0.5     1.      0.     ]
 [1.      1.      1.      1.      0.     ]]
Optimal Body Condition Assignment: 
[0 4 1 2 3]
Sum of distances for optimal body condition assignment: 
2.53125
Distance between rule bodies: 
0.70625
Distance between rules: 
0.7552083333333333

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax), _]
5
4
Body atom distances: 
[[0.         1.         1.         1.         0.        ]
 [1.         1.         1.         1.         0.        ]
 [1.         1.         1.         1.         0.        ]
 [1.         0.5        0.5        1.         0.        ]
 [1.         1.         1.         0.33333333 0.        ]]
Optimal Body Condition Assignment: 
[0 4 1 2 3]
Sum of distances for optimal body condition assignment: 
1.8333333333333333
Distance between rule bodies: 
0.5666666666666667
Distance between rules: 
0.49305555555555547

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax)), _]
5
4
Body atom distances: 
[[0.  1.  1.  1.  0. ]
 [1.  1.  1.  1.  0. ]
 [1.  1.  1.  1.  0. ]
 [1.  0.5 0.5 1.  0. ]
 [1.  1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 4 1 2 3]
Sum of distances for optimal body condition assignment: 
2.5
Distance between rule bodies: 
0.7000000000000001
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
5
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         1.         1.         1.         1.        ]
 [1.         1.         1.         1.         1.        ]
 [1.         0.5        0.5        1.         1.        ]
 [1.         1.         1.         0.33333333 1.        ]]
Optimal Body Condition Assignment: 
[0 1 4 2 3]
Sum of distances for optimal body condition assignment: 
2.8333333333333335
Distance between rule bodies: 
0.5666666666666668
Distance between rules: 
0.49305555555555564

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax)), _]
5
4
Body atom distances: 
[[0.  1.  1.  1.  0. ]
 [1.  1.  1.  1.  0. ]
 [1.  1.  1.  1.  0. ]
 [1.  0.5 0.5 1.  0. ]
 [1.  1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 4 1 2 3]
Sum of distances for optimal body condition assignment: 
2.5
Distance between rule bodies: 
0.7000000000000001
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[thresholds(trawlingCrs,TrawlingCrs), _, _, _, _]
5
1
Body atom distances: 
[[1.  0.  0.  0.  0. ]
 [1.  0.  0.  0.  0. ]
 [1.  0.  0.  0.  0. ]
 [0.5 0.  0.  0.  0. ]
 [1.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 2 3 0 4]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.9
Distance between rules: 
0.9166666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _, _]
5
3
Body atom distances: 
[[0.         1.         1.         0.         0.        ]
 [1.         1.         1.         0.         0.        ]
 [1.         1.         1.         0.         0.        ]
 [1.         0.5        1.         0.         0.        ]
 [1.         1.         0.33333333 0.         0.        ]]
Optimal Body Condition Assignment: 
[0 3 4 1 2]
Sum of distances for optimal body condition assignment: 
0.8333333333333333
Distance between rule bodies: 
0.5666666666666667
Distance between rules: 
0.49305555555555547

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(change_in_heading(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(gap_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(gap_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(stop_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(slow_motion_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(slow_motion_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
4
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         0.         1.         1.         1.        ]
 [1.         1.         0.125      1.         1.        ]
 [1.         1.         1.         1.         0.33333333]
 [0.         0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 2 4 3]
Sum of distances for optimal body condition assignment: 
0.4583333333333333
Distance between rule bodies: 
0.2916666666666667
Distance between rules: 
0.2534722222222222

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 0. 1. 1.]
 [1. 1. 0. 1.]
 [1. 1. 1. 0.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
4
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         0.         1.         1.        ]
 [1.         1.         0.125      1.        ]
 [1.         1.         1.         0.33333333]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.4583333333333333
Distance between rule bodies: 
0.11458333333333333
Distance between rules: 
0.10416666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
4
3
Body atom distances: 
[[0. 1. 1. 0.]
 [1. 1. 1. 0.]
 [1. 1. 1. 0.]
 [1. 1. 1. 0.]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
2.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
4
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      1.      1.      1.     ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.03125
Distance between rule bodies: 
0.7578125
Distance between rules: 
0.80625

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
4
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         0.33333333]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.3333333333333335
Distance between rule bodies: 
0.5833333333333334
Distance between rules: 
0.4916666666666667

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max), _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
4
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         1.         1.         1.         1.        ]
 [1.         1.         1.         1.         1.        ]
 [1.         1.         1.         0.33333333 1.        ]
 [0.         0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
2.3333333333333335
Distance between rule bodies: 
0.6666666666666667
Distance between rules: 
0.576388888888889

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
4
1
Body atom distances: 
[[1. 0. 0. 0.]
 [1. 0. 0. 0.]
 [1. 0. 0. 0.]
 [1. 0. 0. 0.]]
Optimal Body Condition Assignment: 
[1 2 3 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
4
3
Body atom distances: 
[[0.         1.         1.         0.        ]
 [1.         1.         1.         0.        ]
 [1.         1.         1.         0.        ]
 [1.         1.         0.33333333 0.        ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
1.3333333333333333
Distance between rule bodies: 
0.5833333333333333
Distance between rules: 
0.49166666666666664

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(change_in_heading(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(gap_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(gap_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(stop_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(slow_motion_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(slow_motion_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
4
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         0.         1.         1.         1.        ]
 [1.         1.         0.25       1.         1.        ]
 [1.         1.         1.         1.         0.33333333]
 [0.         0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 2 4 3]
Sum of distances for optimal body condition assignment: 
0.5833333333333333
Distance between rule bodies: 
0.31666666666666665
Distance between rules: 
0.2743055555555555

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
4
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         0.         1.         1.        ]
 [1.         1.         0.125      1.        ]
 [1.         1.         1.         0.33333333]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.4583333333333333
Distance between rule bodies: 
0.11458333333333333
Distance between rules: 
0.10416666666666666

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 0. 1. 1.]
 [1. 1. 0. 1.]
 [1. 1. 1. 0.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
4
3
Body atom distances: 
[[0. 1. 1. 0.]
 [1. 1. 1. 0.]
 [1. 1. 1. 0.]
 [1. 1. 1. 0.]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
2.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
4
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      1.      1.      1.     ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.03125
Distance between rule bodies: 
0.7578125
Distance between rules: 
0.80625

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
4
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         0.33333333]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.3333333333333335
Distance between rule bodies: 
0.5833333333333334
Distance between rules: 
0.4916666666666667

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf), _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
4
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         1.         1.         1.         1.        ]
 [1.         1.         1.         1.         1.        ]
 [1.         1.         1.         0.33333333 1.        ]
 [0.         0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
2.3333333333333335
Distance between rule bodies: 
0.6666666666666667
Distance between rules: 
0.576388888888889

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
4
1
Body atom distances: 
[[1. 0. 0. 0.]
 [1. 0. 0. 0.]
 [1. 0. 0. 0.]
 [1. 0. 0. 0.]]
Optimal Body Condition Assignment: 
[1 2 3 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
4
3
Body atom distances: 
[[0.         1.         1.         0.        ]
 [1.         1.         1.         0.        ]
 [1.         1.         1.         0.        ]
 [1.         1.         0.16666667 0.        ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
1.1666666666666667
Distance between rule bodies: 
0.5416666666666667
Distance between rules: 
0.4583333333333334

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(change_in_heading(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(gap_start(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   0.5  0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.5833333333333333
Distance between rules: 
0.6875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(gap_end(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   0.5  0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.5833333333333333
Distance between rules: 
0.6875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(stop_end(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(slow_motion_start(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(slow_motion_end(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(change_in_speed_start(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(change_in_speed_end(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
3
Body atom distances: 
[[0. 1. 1. 1. 1.]
 [1. 1. 1. 0. 1.]
 [1. 1. 1. 1. 1.]
 [0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0.]]
Optimal Body Condition Assignment: 
[0 3 1 2 4]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.6000000000000001
Distance between rules: 
0.6666666666666666

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
3
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [0. 0. 0. 0.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
3
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [0. 0. 0. 0.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
3
Body atom distances: 
[[0. 1. 1.]
 [1. 0. 1.]
 [1. 1. 0.]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.5625

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
3
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      0.5     1.     ]
 [1.      1.      1.      1.     ]
 [0.      0.      0.      0.     ]]
Optimal Body Condition Assignment: 
[0 2 1 3]
Sum of distances for optimal body condition assignment: 
1.53125
Distance between rule bodies: 
0.6328125
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(end(=(underWay(Vessel),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
3
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.5 0.5 1. ]
 [1.  1.  1.  1. ]
 [0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.625
Distance between rules: 
0.7000000000000001

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
3
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         0.5        0.5        1.        ]
 [1.         1.         1.         0.16666667]
 [0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 3 2]
Sum of distances for optimal body condition assignment: 
0.6666666666666666
Distance between rule bodies: 
0.41666666666666663
Distance between rules: 
0.35833333333333334

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
3
Body atom distances: 
[[0.  1.  1.  1.  1. ]
 [1.  0.5 0.5 1.  1. ]
 [1.  1.  1.  1.  1. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.7000000000000001
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
3
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         0.5        0.5        1.        ]
 [1.         1.         1.         0.16666667]
 [0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 3 2]
Sum of distances for optimal body condition assignment: 
0.6666666666666666
Distance between rule bodies: 
0.41666666666666663
Distance between rules: 
0.35833333333333334

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[thresholds(trawlingCrs,TrawlingCrs), _, _]
3
1
Body atom distances: 
[[1.  0.  0. ]
 [0.5 0.  0. ]
 [1.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 0 2]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.8333333333333333
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
3
Body atom distances: 
[[0.  1.  1. ]
 [1.  0.5 1. ]
 [1.  1.  1. ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.5
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(change_in_heading(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.5625

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(gap_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(gap_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(stop_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(slow_motion_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(slow_motion_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
4
Body atom distances: 
[[0.03125 1.      1.      1.      1.     ]
 [1.      1.      1.      1.      1.     ]
 [1.      1.      1.      0.5     1.     ]
 [1.      1.      1.      1.      1.     ]
 [0.      0.      0.      0.      0.     ]]
Optimal Body Condition Assignment: 
[0 1 3 2 4]
Sum of distances for optimal body condition assignment: 
2.53125
Distance between rule bodies: 
0.70625
Distance between rules: 
0.7552083333333333

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
4
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      1.      1.      1.     ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.03125
Distance between rule bodies: 
0.7578125
Distance between rules: 
0.80625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
4
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      1.      1.      1.     ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.03125
Distance between rule bodies: 
0.7578125
Distance between rules: 
0.80625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
4
3
Body atom distances: 
[[0.03125 1.      1.      0.     ]
 [1.      1.      1.      0.     ]
 [1.      0.5     1.      0.     ]
 [1.      1.      1.      0.     ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
1.53125
Distance between rule bodies: 
0.6328125
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 0. 1. 1.]
 [1. 1. 0. 1.]
 [1. 1. 1. 0.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.65

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
4
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      0.5     0.5     1.     ]
 [1.      1.      1.      1.     ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.53125
Distance between rule bodies: 
0.6328125
Distance between rules: 
0.70625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
4
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      1.      1.     ]
 [1.      0.5     0.5     1.     ]
 [1.      1.      1.      1.     ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.53125
Distance between rule bodies: 
0.6328125
Distance between rules: 
0.51875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr), _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
4
Body atom distances: 
[[0.0625 1.     1.     1.     1.    ]
 [1.     1.     1.     1.     1.    ]
 [1.     0.5    0.5    1.     1.    ]
 [1.     1.     1.     1.     1.    ]
 [0.     0.     0.     0.     0.    ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
2.5625
Distance between rule bodies: 
0.7125
Distance between rules: 
0.7604166666666666

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
4
Body atom distances: 
[[0.0625 1.     1.     1.    ]
 [1.     1.     1.     1.    ]
 [1.     0.5    0.5    1.    ]
 [1.     1.     1.     1.    ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.5625
Distance between rule bodies: 
0.640625
Distance between rules: 
0.525

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
4
1
Body atom distances: 
[[1.  0.  0.  0. ]
 [1.  0.  0.  0. ]
 [0.5 0.  0.  0. ]
 [1.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 2 0 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.875
Distance between rules: 
0.9

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
4
3
Body atom distances: 
[[0.03125 1.      1.      0.     ]
 [1.      1.      1.      0.     ]
 [1.      0.5     1.      0.     ]
 [1.      1.      1.      0.     ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
1.53125
Distance between rule bodies: 
0.6328125
Distance between rules: 
0.70625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(change_in_heading(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.046875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(end(=(underWay(Vessel),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.65

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.046875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.046875

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(underWay(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(gap_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(gap_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(stop_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(slow_motion_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(slow_motion_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
4
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         1.         1.         0.5        1.        ]
 [1.         1.         1.         0.5        1.        ]
 [1.         1.         1.         1.         0.33333333]
 [0.         0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 3 1 4 2]
Sum of distances for optimal body condition assignment: 
1.8333333333333333
Distance between rule bodies: 
0.5666666666666667
Distance between rules: 
0.49305555555555547

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
4
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         0.33333333]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.3333333333333335
Distance between rule bodies: 
0.5833333333333334
Distance between rules: 
0.4916666666666667

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
4
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         0.33333333]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.3333333333333335
Distance between rule bodies: 
0.5833333333333334
Distance between rules: 
0.4916666666666667

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
4
3
Body atom distances: 
[[0.  1.  1.  0. ]
 [1.  0.5 1.  0. ]
 [1.  0.5 1.  0. ]
 [1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.625
Distance between rules: 
0.7000000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
4
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      0.5     1.     ]
 [1.      1.      0.5     1.     ]
 [1.      1.      1.      1.     ]]
Optimal Body Condition Assignment: 
[0 2 1 3]
Sum of distances for optimal body condition assignment: 
2.53125
Distance between rule bodies: 
0.6328125
Distance between rules: 
0.70625

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
4
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.  0.5 1. ]
 [1.  0.5 0.  1. ]
 [1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
4
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.  0.5 1. ]
 [1.  0.5 0.  1. ]
 [1.  1.  1.  1. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.25
Distance between rules: 
0.4

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax), _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
4
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         0.5        0.5        1.         1.        ]
 [1.         0.5        0.5        1.         1.        ]
 [1.         1.         1.         0.33333333 1.        ]
 [0.         0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.3333333333333333
Distance between rule bodies: 
0.4666666666666666
Distance between rules: 
0.39930555555555547

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
4
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.5 0.5 1. ]
 [1.  0.5 0.5 1. ]
 [1.  1.  1.  1. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.6000000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
4
1
Body atom distances: 
[[1.  0.  0.  0. ]
 [0.5 0.  0.  0. ]
 [0.5 0.  0.  0. ]
 [1.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 2 0 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.875
Distance between rules: 
0.9

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
4
3
Body atom distances: 
[[0.         1.         1.         0.        ]
 [1.         0.5        1.         0.        ]
 [1.         0.5        1.         0.        ]
 [1.         1.         0.33333333 0.        ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
0.8333333333333333
Distance between rule bodies: 
0.4583333333333333
Distance between rules: 
0.37916666666666665

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(change_in_heading(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(gap_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   0.5  0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.6875
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(gap_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   0.5  0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.6875
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(stop_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(slow_motion_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(slow_motion_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
4
Body atom distances: 
[[0.  1.  1.  1.  1. ]
 [1.  1.  1.  0.5 1. ]
 [1.  1.  1.  0.5 1. ]
 [1.  1.  1.  1.  1. ]
 [0.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 3 1 2 4]
Sum of distances for optimal body condition assignment: 
2.5
Distance between rule bodies: 
0.7000000000000001
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
4
3
Body atom distances: 
[[0.         1.         1.         0.        ]
 [1.         0.5        1.         0.        ]
 [1.         0.5        1.         0.        ]
 [1.         1.         0.16666667 0.        ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
0.6666666666666666
Distance between rule bodies: 
0.41666666666666663
Distance between rules: 
0.35833333333333334

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
4
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      0.5     1.     ]
 [1.      1.      0.5     1.     ]
 [1.      1.      1.      1.     ]]
Optimal Body Condition Assignment: 
[0 2 1 3]
Sum of distances for optimal body condition assignment: 
2.53125
Distance between rule bodies: 
0.6328125
Distance between rules: 
0.51875

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
4
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.  0.5 1. ]
 [1.  0.5 0.  1. ]
 [1.  1.  1.  1. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.25
Distance between rules: 
0.4

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
4
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.  0.5 1. ]
 [1.  0.5 0.  1. ]
 [1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.65

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax)), _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
4
Body atom distances: 
[[0.  1.  1.  1.  1. ]
 [1.  0.5 0.5 1.  1. ]
 [1.  0.5 0.5 1.  1. ]
 [1.  1.  1.  1.  1. ]
 [0.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
2.0
Distance between rule bodies: 
0.6000000000000001
Distance between rules: 
0.6666666666666666

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
4
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         0.5        0.5        1.        ]
 [1.         0.5        0.5        1.        ]
 [1.         1.         1.         0.16666667]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.1666666666666667
Distance between rule bodies: 
0.2916666666666667
Distance between rules: 
0.24583333333333335

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
4
1
Body atom distances: 
[[1.  0.  0.  0. ]
 [0.5 0.  0.  0. ]
 [0.5 0.  0.  0. ]
 [1.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 2 0 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.875
Distance between rules: 
0.9

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
4
3
Body atom distances: 
[[0.  1.  1.  0. ]
 [1.  0.5 1.  0. ]
 [1.  0.5 1.  0. ]
 [1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.625
Distance between rules: 
0.7000000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(change_in_heading(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.65

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(gap_start(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _, _]
5
2
Body atom distances: 
[[0.25     1.       0.       0.       0.      ]
 [1.       1.       0.       0.       0.      ]
 [1.       1.       0.       0.       0.      ]
 [1.       1.       0.       0.       0.      ]
 [1.       0.015625 0.       0.       0.      ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
0.265625
Distance between rule bodies: 
0.6531250000000001
Distance between rules: 
0.5651041666666667

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(gap_end(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _, _]
5
2
Body atom distances: 
[[0.25     1.       0.       0.       0.      ]
 [1.       1.       0.       0.       0.      ]
 [1.       1.       0.       0.       0.      ]
 [1.       1.       0.       0.       0.      ]
 [1.       0.015625 0.       0.       0.      ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
0.265625
Distance between rule bodies: 
0.6531250000000001
Distance between rules: 
0.5651041666666667

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(stop_end(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(slow_motion_start(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(slow_motion_end(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(change_in_speed_start(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(change_in_speed_end(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
5
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         1.         1.         0.5        1.        ]
 [1.         1.         1.         0.5        1.        ]
 [1.         1.         1.         1.         0.33333333]
 [1.         1.         1.         1.         1.        ]]
Optimal Body Condition Assignment: 
[0 3 1 4 2]
Sum of distances for optimal body condition assignment: 
2.833333333333333
Distance between rule bodies: 
0.5666666666666667
Distance between rules: 
0.49305555555555547

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max), _]
5
4
Body atom distances: 
[[0.         1.         1.         1.         0.        ]
 [1.         1.         1.         1.         0.        ]
 [1.         1.         1.         1.         0.        ]
 [1.         1.         1.         0.33333333 0.        ]
 [1.         1.         1.         1.         0.        ]]
Optimal Body Condition Assignment: 
[0 4 1 3 2]
Sum of distances for optimal body condition assignment: 
2.333333333333333
Distance between rule bodies: 
0.6666666666666666
Distance between rules: 
0.5763888888888888

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf), _]
5
4
Body atom distances: 
[[0.         1.         1.         1.         0.        ]
 [1.         1.         1.         1.         0.        ]
 [1.         1.         1.         1.         0.        ]
 [1.         1.         1.         0.33333333 0.        ]
 [1.         1.         1.         1.         0.        ]]
Optimal Body Condition Assignment: 
[0 4 1 3 2]
Sum of distances for optimal body condition assignment: 
2.333333333333333
Distance between rule bodies: 
0.6666666666666666
Distance between rules: 
0.5763888888888888

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _, _]
5
3
Body atom distances: 
[[0.  1.  1.  0.  0. ]
 [1.  0.5 1.  0.  0. ]
 [1.  0.5 1.  0.  0. ]
 [1.  1.  1.  0.  0. ]
 [1.  1.  1.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 3 1 4 2]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.7000000000000001
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr), _]
5
4
Body atom distances: 
[[0.0625 1.     1.     1.     0.    ]
 [1.     1.     0.5    1.     0.    ]
 [1.     1.     0.5    1.     0.    ]
 [1.     1.     1.     1.     0.    ]
 [1.     1.     1.     1.     0.    ]]
Optimal Body Condition Assignment: 
[0 4 2 1 3]
Sum of distances for optimal body condition assignment: 
2.5625
Distance between rule bodies: 
0.7125
Distance between rules: 
0.7604166666666666

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax), _]
5
4
Body atom distances: 
[[0.         1.         1.         1.         0.        ]
 [1.         0.5        0.5        1.         0.        ]
 [1.         0.5        0.5        1.         0.        ]
 [1.         1.         1.         0.33333333 0.        ]
 [1.         1.         1.         1.         0.        ]]
Optimal Body Condition Assignment: 
[0 2 1 3 4]
Sum of distances for optimal body condition assignment: 
1.3333333333333333
Distance between rule bodies: 
0.4666666666666666
Distance between rules: 
0.39930555555555547

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax)), _]
5
4
Body atom distances: 
[[0.  1.  1.  1.  0. ]
 [1.  0.5 0.5 1.  0. ]
 [1.  0.5 0.5 1.  0. ]
 [1.  1.  1.  1.  0. ]
 [1.  1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 2 1 4 3]
Sum of distances for optimal body condition assignment: 
2.0
Distance between rule bodies: 
0.6000000000000001
Distance between rules: 
0.6666666666666666

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
5
Body atom distances: 
[[0.  1.  1.  1.  1. ]
 [1.  0.  0.5 1.  1. ]
 [1.  0.5 0.  1.  1. ]
 [1.  1.  1.  0.  1. ]
 [1.  1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax)), _]
5
4
Body atom distances: 
[[0.  1.  1.  1.  0. ]
 [1.  0.  0.5 1.  0. ]
 [1.  0.5 0.  1.  0. ]
 [1.  1.  1.  1.  0. ]
 [1.  1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 4 3]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.4
Distance between rules: 
0.5

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _, _]
5
2
Body atom distances: 
[[0.25 1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   1.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 4 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.65
Distance between rules: 
0.5520833333333333

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[thresholds(trawlingCrs,TrawlingCrs), _, _, _, _]
5
1
Body atom distances: 
[[1.  0.  0.  0.  0. ]
 [0.5 0.  0.  0.  0. ]
 [0.5 0.  0.  0.  0. ]
 [1.  0.  0.  0.  0. ]
 [1.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 2 0 4 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.9
Distance between rules: 
0.9166666666666666

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _, _]
5
3
Body atom distances: 
[[0.         1.         1.         0.         0.        ]
 [1.         0.5        1.         0.         0.        ]
 [1.         0.5        1.         0.         0.        ]
 [1.         1.         0.33333333 0.         0.        ]
 [1.         1.         1.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 3 1 2 4]
Sum of distances for optimal body condition assignment: 
0.8333333333333333
Distance between rule bodies: 
0.5666666666666667
Distance between rules: 
0.48263888888888884

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(change_in_heading(Vessel),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
5
1
Body atom distances: 
[[0.25 0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]
 [1.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 4 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(gap_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   0.5  0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.6875
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(gap_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   0.5  0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
0.75
Distance between rule bodies: 
0.6875
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(stop_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(slow_motion_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(slow_motion_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(change_in_speed_start(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(change_in_speed_end(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax)), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
4
Body atom distances: 
[[0.  1.  1.  1.  1. ]
 [1.  1.  1.  0.5 1. ]
 [1.  1.  1.  0.5 1. ]
 [1.  1.  1.  1.  1. ]
 [0.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 3 1 2 4]
Sum of distances for optimal body condition assignment: 
2.5
Distance between rule bodies: 
0.7000000000000001
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
4
Body atom distances: 
[[0. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]
 [1. 1. 1. 1.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
3.0
Distance between rule bodies: 
0.75
Distance between rules: 
0.8

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf)), _]
4
3
Body atom distances: 
[[0.         1.         1.         0.        ]
 [1.         0.5        1.         0.        ]
 [1.         0.5        1.         0.        ]
 [1.         1.         0.16666667 0.        ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
0.6666666666666666
Distance between rule bodies: 
0.41666666666666663
Distance between rules: 
0.35833333333333334

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
4
Body atom distances: 
[[0.0625 1.     1.     1.    ]
 [1.     1.     0.5    1.    ]
 [1.     1.     0.5    1.    ]
 [1.     1.     1.     1.    ]]
Optimal Body Condition Assignment: 
[0 2 1 3]
Sum of distances for optimal body condition assignment: 
2.5625
Distance between rule bodies: 
0.640625
Distance between rules: 
0.525

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(end(=(underWay(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
4
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.5 0.5 1. ]
 [1.  0.5 0.5 1. ]
 [1.  1.  1.  1. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
2.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.6000000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
4
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         0.5        0.5        1.        ]
 [1.         0.5        0.5        1.        ]
 [1.         1.         1.         0.16666667]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.1666666666666667
Distance between rule bodies: 
0.2916666666666667
Distance between rules: 
0.24583333333333335

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax)), _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
4
Body atom distances: 
[[0.  1.  1.  1.  1. ]
 [1.  0.  0.5 1.  1. ]
 [1.  0.5 0.  1.  1. ]
 [1.  1.  1.  1.  1. ]
 [0.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
0.4
Distance between rules: 
0.5

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
4
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.  0.5 1. ]
 [1.  0.5 0.  1. ]
 [1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.65

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.65

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
4
2
Body atom distances: 
[[0.25 1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]
 [1.   1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 3 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
4
1
Body atom distances: 
[[1.  0.  0.  0. ]
 [0.5 0.  0.  0. ]
 [0.5 0.  0.  0. ]
 [1.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 2 0 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.875
Distance between rules: 
0.9

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
4
3
Body atom distances: 
[[0.  1.  1.  0. ]
 [1.  0.5 1.  0. ]
 [1.  0.5 1.  0. ]
 [1.  1.  1.  0. ]]
Optimal Body Condition Assignment: 
[0 3 1 2]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.625
Distance between rules: 
0.7000000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(change_in_heading(Vessel),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
4
1
Body atom distances: 
[[0.25 0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]
 [1.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 3 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.65

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.0078125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0078125
Distance between rule bodies: 
0.0078125
Distance between rules: 
0.03515625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.046875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.65

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(gap_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25     1.      ]
 [1.       0.015625]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.265625
Distance between rule bodies: 
0.1328125
Distance between rules: 
0.13020833333333331

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(gap_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
2
Body atom distances: 
[[0.25     1.      ]
 [1.       0.015625]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.265625
Distance between rule bodies: 
0.1328125
Distance between rules: 
0.13020833333333331

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
2
Body atom distances: 
[[0.25 1.  ]
 [1.   1.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(stop_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(slow_motion_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(slow_motion_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(change_in_speed_start(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(change_in_speed_end(Vessel),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(end(=(underWay(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
2
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [1.   1.   1.   1.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 4 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.65
Distance between rules: 
0.5520833333333333

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
2
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [1.   1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
2
Body atom distances: 
[[0. 1.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[thresholds(trawlingCrs,TrawlingCrs), _]
2
1
Body atom distances: 
[[1. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[1 0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
2
Body atom distances: 
[[0.25 1.   1.  ]
 [1.   1.   1.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(change_in_heading(Vessel),T), _]
2
1
Body atom distances: 
[[0. 0.]
 [1. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.35416666666666663

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
[happensAt(start(=(gap(Vessel),_Status)),T), _]
2
1
Body atom distances: 
[[0.25 0.  ]
 [1.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.0078125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0078125
Distance between rule bodies: 
0.0078125
Distance between rules: 
0.03515625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.046875

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[1. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[1. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[1. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[1. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[1. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[1. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[1.  1.  1.  0.5 1. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[3 0 1 2 4]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.9
Distance between rules: 
0.9166666666666666

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[1. 1. 1. 1.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[1. 1. 1. 1.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[1.  0.5 1. ]
 [0.  0.  0. ]
 [0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 0 2]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.8333333333333333
Distance between rules: 
0.875

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[1.  1.  0.5 1. ]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[2 0 1 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.875
Distance between rules: 
0.9

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[1.  0.5 0.5 1. ]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 0 2 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.875
Distance between rules: 
0.9

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[1.  0.5 0.5 1. ]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 0 2 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.875
Distance between rules: 
0.9

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[1.  0.5 0.5 1.  1. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]
 [0.  0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 0 2 3 4]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.9
Distance between rules: 
0.9166666666666666

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[1.  0.5 0.5 1. ]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]
 [0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 0 2 3]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.875
Distance between rules: 
0.9

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[1. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
0
[thresholds(trawlingCrs,TrawlingCrs)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[1.  0.5 1. ]
 [0.  0.  0. ]
 [0.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 0 2]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.8333333333333333
Distance between rules: 
0.875

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[thresholds(trawlingCrs,TrawlingCrs)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(gap_start(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(gap_end(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T)), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(stop_end(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(slow_motion_start(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(slow_motion_end(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(change_in_speed_start(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(change_in_speed_end(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
3
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         1.         1.         0.5        1.        ]
 [1.         1.         1.         1.         0.33333333]
 [0.         0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 3 4 1 2]
Sum of distances for optimal body condition assignment: 
0.8333333333333333
Distance between rule bodies: 
0.5666666666666667
Distance between rules: 
0.49305555555555547

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
3
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         0.33333333]
 [0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 3 2]
Sum of distances for optimal body condition assignment: 
1.3333333333333333
Distance between rule bodies: 
0.5833333333333333
Distance between rules: 
0.49166666666666664

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
3
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         1.         1.         1.        ]
 [1.         1.         1.         0.16666667]
 [0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 3 2]
Sum of distances for optimal body condition assignment: 
1.1666666666666667
Distance between rule bodies: 
0.5416666666666667
Distance between rules: 
0.4583333333333334

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
3
Body atom distances: 
[[0.  1.  1. ]
 [1.  0.5 1. ]
 [1.  1.  1. ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.5
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
3
Body atom distances: 
[[0.03125 1.      1.      1.     ]
 [1.      1.      0.5     1.     ]
 [1.      1.      1.      1.     ]
 [0.      0.      0.      0.     ]]
Optimal Body Condition Assignment: 
[0 2 1 3]
Sum of distances for optimal body condition assignment: 
1.53125
Distance between rule bodies: 
0.6328125
Distance between rules: 
0.70625

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(end(=(underWay(Vessel),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
3
Body atom distances: 
[[0.         1.         1.         1.        ]
 [1.         0.5        0.5        1.        ]
 [1.         1.         1.         0.33333333]
 [0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 3 2]
Sum of distances for optimal body condition assignment: 
0.8333333333333333
Distance between rule bodies: 
0.4583333333333333
Distance between rules: 
0.37916666666666665

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
3
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.5 0.5 1. ]
 [1.  1.  1.  1. ]
 [0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.625
Distance between rules: 
0.7000000000000001

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
3
Body atom distances: 
[[0.         1.         1.         1.         1.        ]
 [1.         0.5        0.5        1.         1.        ]
 [1.         1.         1.         0.33333333 1.        ]
 [0.         0.         0.         0.         0.        ]
 [0.         0.         0.         0.         0.        ]]
Optimal Body Condition Assignment: 
[0 1 3 2 4]
Sum of distances for optimal body condition assignment: 
0.8333333333333333
Distance between rule bodies: 
0.5666666666666667
Distance between rules: 
0.48263888888888884

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf), _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
3
Body atom distances: 
[[0.  1.  1.  1. ]
 [1.  0.5 0.5 1. ]
 [1.  1.  1.  1. ]
 [0.  0.  0.  0. ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
1.5
Distance between rule bodies: 
0.625
Distance between rules: 
0.7000000000000001

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T), _]
3
2
Body atom distances: 
[[0.25 1.   0.  ]
 [1.   1.   0.  ]
 [1.   1.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
1.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[thresholds(trawlingCrs,TrawlingCrs), _, _]
3
1
Body atom distances: 
[[1.  0.  0. ]
 [0.5 0.  0. ]
 [1.  0.  0. ]]
Optimal Body Condition Assignment: 
[1 0 2]
Sum of distances for optimal body condition assignment: 
0.5
Distance between rule bodies: 
0.8333333333333333
Distance between rules: 
0.875

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
3
Body atom distances: 
[[0. 1. 1.]
 [1. 0. 1.]
 [1. 1. 0.]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(change_in_heading(Vessel),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
3
1
Body atom distances: 
[[0.25 0.   0.  ]
 [1.   0.   0.  ]
 [1.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 2 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(change_in_heading(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0. 1.]
 [0. 0.]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.5
Distance between rules: 
0.35416666666666663

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.0625
[happensAt(change_in_heading(Vessel),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0
[happensAt(change_in_heading(Vessel),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(change_in_heading(Vessel),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
0.125
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
0.125
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4583333333333333

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
0.125
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.7291666666666666

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
0.125
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
0.125
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.675

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
0.0625
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.71875

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(changingSpeed(Vessel),true)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
0.0625
[happensAt(start(=(changingSpeed(Vessel),true)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.578125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
0
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.125

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
0
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0

Comparing rules:
 initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
1
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(entersArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(entersArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,AreaType),true),T) :- 
	happensAt(leavesArea(Vessel,Area),T),
	areaType(Area,AreaType).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(leavesArea(Vessel,Area),T), areaType(Area,AreaType)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.4375

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(withinArea(Vessel,_AreaType),true),T) :- 
	happensAt(gap_start(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),nearPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(gap(Vessel),farFromPorts),T) :- 
	happensAt(gap_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(gap_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(gap(Vessel),_PortStatus),T) :- 
	happensAt(gap_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(gap_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),nearPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	holdsAt(=(withinArea(Vessel,nearPorts),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), holdsAt(=(withinArea(Vessel,nearPorts),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(stopped(Vessel),farFromPorts),T) :- 
	happensAt(stop_start(Vessel),T),
	-(holdsAt(=(withinArea(Vessel,nearPorts),true),T)).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(stop_start(Vessel),T), -(holdsAt(=(withinArea(Vessel,nearPorts),true),T))]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(stop_end(Vessel),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(stop_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.1875

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(stopped(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(slow_motion_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(slow_motion_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(lowSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_start(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_start(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(change_in_speed_end(Vessel),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_speed_end(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(changingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(highSpeedNearCoast(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,nearCoast),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,nearCoast),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),below),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,_Max,_Avg),
	thresholds(movingMin,MovingMin),
	inRange(Speed,MovingMin,Min).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,_Max,_Avg), thresholds(movingMin,MovingMin), inRange(Speed,MovingMin,Min)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),normal),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,Min,Max,_Avg),
	inRange(Speed,Min,Max).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,Min,Max,_Avg), inRange(Speed,Min,Max)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(movingSpeed(Vessel),above),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	vesselType(Vessel,Type),
	typeSpeed(Type,_Min,Max,_Avg),
	inRange(Speed,Max,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), vesselType(Vessel,Type), typeSpeed(Type,_Min,Max,_Avg), inRange(Speed,Max,inf)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(movingMin,MovingMin),
	-(inRange(Speed,MovingMin,inf)).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(movingMin,MovingMin), -(inRange(Speed,MovingMin,inf))]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.59375

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(movingSpeed(Vessel),_Status),T) :- 
	happensAt(start(=(gap(Vessel),_GapStatus)),T).

Distance between rule heads: 
0.125
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_GapStatus)),T)]
1
1
Body atom distances: 
[[0.03125]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.03125
Distance between rule bodies: 
0.03125
Distance between rules: 
0.078125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T),
	absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff),
	thresholds(adriftAngThr,AdriftAngThr),
	=(AngleDiff,AdriftAngThr).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,_Speed,CourseOverGround,TrueHeading),T), absoluteAngleDiff(CourseOverGround,TrueHeading,AngleDiff), thresholds(adriftAngThr,AdriftAngThr), =(AngleDiff,AdriftAngThr)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(drifting(Vessel),true),T) :- 
	happensAt(end(=(underWay(Vessel),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(underWay(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	inRange(Speed,TuggingMin,TuggingMax).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), inRange(Speed,TuggingMin,TuggingMax)]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.8500000000000001

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(tuggingMin,TuggingMin),
	thresholds(tuggingMax,TuggingMax),
	-(inRange(Speed,TuggingMin,TuggingMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(tuggingMin,TuggingMin), thresholds(tuggingMax,TuggingMax), -(inRange(Speed,TuggingMin,TuggingMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(tuggingSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	inRange(Speed,TrawlspeedMin,TrawlspeedMax),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), inRange(Speed,TrawlspeedMin,TrawlspeedMax), holdsAt(=(withinArea(Vessel,fishing),true),T)]
5
1
Body atom distances: 
[[0.25 1.   1.   1.   1.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]
 [0.   0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3 4]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8500000000000001
Distance between rules: 
0.875

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_Heading,_),T),
	thresholds(trawlspeedMin,TrawlspeedMin),
	thresholds(trawlspeedMax,TrawlspeedMax),
	-(inRange(Speed,TrawlspeedMin,TrawlspeedMax)).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T), _, _, _]
[happensAt(velocity(Vessel,Speed,_Heading,_),T), thresholds(trawlspeedMin,TrawlspeedMin), thresholds(trawlspeedMax,TrawlspeedMax), -(inRange(Speed,TrawlspeedMin,TrawlspeedMax))]
4
1
Body atom distances: 
[[0.25 1.   1.   1.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]
 [0.   0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2 3]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.8125
Distance between rules: 
0.6625000000000001

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlSpeed(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T),
	holdsAt(=(withinArea(Vessel,fishing),true),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _]
[happensAt(change_in_heading(Vessel),T), holdsAt(=(withinArea(Vessel,fishing),true),T)]
2
1
Body atom distances: 
[[0.25 1.  ]
 [0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.625
Distance between rules: 
0.75

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(trawlingMovement(Vessel),true),T) :- 
	happensAt(end(=(withinArea(Vessel,fishing),true)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(end(=(withinArea(Vessel,fishing),true)),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.15625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
fi(=(trawlingMovement(Vessel),true),=(trawlingMovement(Vessel),false),TrawlingCrs) :- 
	thresholds(trawlingCrs,TrawlingCrs).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[thresholds(trawlingCrs,TrawlingCrs)]
1
1
Body atom distances: 
[[1.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
1.0
Distance between rule bodies: 
1.0
Distance between rules: 
1.0

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(velocity(Vessel,Speed,_,_),T),
	thresholds(sarMinSpeed,SarMinSpeed),
	inRange(Speed,SarMinSpeed,inf).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T), _, _]
[happensAt(velocity(Vessel,Speed,_,_),T), thresholds(sarMinSpeed,SarMinSpeed), inRange(Speed,SarMinSpeed,inf)]
3
1
Body atom distances: 
[[0.25 1.   1.  ]
 [0.   0.   0.  ]
 [0.   0.   0.  ]]
Optimal Body Condition Assignment: 
[0 1 2]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.75
Distance between rules: 
0.8125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarSpeed(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0.0625
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.03125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(change_in_heading(Vessel),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(change_in_heading(Vessel),T)]
1
1
Body atom distances: 
[[0.25]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.25
Distance between rule bodies: 
0.25
Distance between rules: 
0.625

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
initiatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(changingSpeed(Vessel),true)),T).

Distance between rule heads: 
1
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(changingSpeed(Vessel),true)),T)]
1
1
Body atom distances: 
[[0.0625]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0625
Distance between rule bodies: 
0.0625
Distance between rules: 
0.53125

Comparing rules:
 terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).
 and
terminatedAt(=(sarMovement(Vessel),true),T) :- 
	happensAt(start(=(gap(Vessel),_Status)),T).

Distance between rule heads: 
0
[happensAt(start(=(gap(Vessel),_Status)),T)]
[happensAt(start(=(gap(Vessel),_Status)),T)]
1
1
Body atom distances: 
[[0.]]
Optimal Body Condition Assignment: 
[0]
Sum of distances for optimal body condition assignment: 
0.0
Distance between rule bodies: 
0.0
Distance between rules: 
0.0
Rule distances: 
[[0.         0.41666667 0.75       ... 0.4375     0.4375     0.75      ]
 [0.41666667 0.         0.421875   ... 0.75       0.75       0.4375    ]
 [0.75       0.421875   0.         ... 0.625      0.625      0.15625   ]
 ...
 [0.4375     0.75       0.625      ... 0.         0.125      0.625     ]
 [0.4375     0.75       0.625      ... 0.125      0.         0.53125   ]
 [0.75       0.4375     0.15625    ... 0.625      0.53125    0.        ]]
Optimal Rule Assignment: 
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38]
Sum of distances for optimal rule assignment: 
0.0
Distance between event descriptions: 
0.0
Event Description Similarity: 
1.0
